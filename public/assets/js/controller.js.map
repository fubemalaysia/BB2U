{"version":3,"sources":["chat-settings.controller.js","stream.controller.js","likes-widget.controller.js","model-profile-image.controller.js","model-video.controller.js","model-profile.controller.js","model-create-gallery.controller.js","model-edit-gallery.controller.js","model-image-gallery.controller.js","model-image-galleries.controller.js","model-video-galleries.controller.js","model-video-gallery.controller.js","model-video-upload.controller.js","model-setting.controller.js","model-schedule.controller.js","model-earning.controller.js","ModelOnline.controller.js","media.controller.js","payment.controller.js","model-request.controller.js","model-manage-product.controller.js","buy.controller.js","order-tracking.controller.js"],"names":["angular","module","controller","$scope","appSettings","chatSettingService","performerchat","get","USER","role","id","then","data","saveChanges","form","settingsData","copy","update","success","alertify","message","error","$timeout","$uibModal","socket","PerformerChat","chatService","$http","commonHelper","userService","tablist","$","addClass","reTimeoutRoom","onMessageCallbacks","isGroupLive","isPrivateChat","isOffline","groupLink","roomId","currentModelId","virtualRoom","modelId","streamingInfo","spendTokens","time","tokensReceive","type","hasRoom","threadId","totalView","isStreaming","reCountMember","emit","guests","members","$$phase","$apply","on","sender","connection","userid","channel","onGroupChat","model_id","model","online","removeClass","BASE_URL","show","status","hide","onModelInitPublicChat","broadcastid","isLoading","hasClass","location","reload","isShowPrivateMessage","length","chatType","warning","window","href","CHAT_ROOM_ID","ownerId","modalInstance","open","animation","templateUrl","Math","random","toString","slice","backdrop","keyboard","result","res","timeoutVideo","steamId","connectionNow","currentConnectStart","initRTCMultiConnection","RTCMultiConnection","socketURL","RTC_URL","socketMessageEvent","getExternalIceServers","videosContainer","document","getElementById","sessionid","sdpConstraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","onMediaError","alert","onstream","event","numOfVideos","childElementCount","isInitiator","mediaElement","removeAttribute","isUpperUserLeft","timeout","i","initNumber","capture","console","log","takeSnapshot","snapshot","post","base64","shotNumber","setTimeout","$on","clearTimeout","recordingInterval","dontCaptureUserMedia","attachStreams","stream","streamid","video","createElement","setAttributeNode","createAttribute","e","setAttribute","volume","srcObject","controls","width","parseInt","clientWidth","getHTMLMediaElement","title","buttons","showOnMouseEnter","appendChild","media","play","enableLogs","initRoom","room","openBroadcast","typeOfStreams","screen","audio","oneway","session","joinBroadcast","has","privateChatRoom","broadcaster","reCheckRoomPresence","isRoomExists","join","extra","close","dontTransmit","innerHTML","msg","isBroadcastExists","beep","unique","Date","getTime","snd","Audio","sendTip","prompt","evt","value","isNumber","sendTipTokens","response","tokens","sendObj","text","sendModelReceiveInfo","set","backToFreeChat","url","onModelReceiveInfo","stopStreaming","autoCloseEntireSession","changeStreaming","getChatPrice","cost","confirm","statusForUpdating","modelStatus","updateStatus","userId","isFullScreenMode","showFullScreen","notShowFullScreen","likesWidgetService","init","itemId","item","count","headers","config","totalLikes","checkMe","liked","likeThis","likeMe","mediaService","currentPage","lastPage","perPage","LIMIT_PER_PAGE","orderBy","sort","myImages","loadMoreInfinite","findProfileByMe","page","limit","mediaType","current_page","last_page","makeProfile","index","setProfile","deleteModelImage","key","deleteImage","splice","scroll","scrollTop","height","concat","showUploadModal","size","resolve","parentId","push","myVideos","findByMe","deleteFile","loadMoreImages","countryService","categoryService","profile","performer","countries","states","cities","getPerformer","category_id","age","city_id","countryId","country_id","stateId","state_id","user_id","languages","split","getCountries","getStates","getCities","ages","heightList","publics","categories","selectState","selectCity","all","changeCountry","changeState","errors","state","city","formSubmitted","savePerformerProfile","state_name","city_name","$valid","updatePerformer","firstName","lastName","checkLanguage","tag","myRegEx","test","galleryService","gallery","name","description","price","submitted","submitCreateGallery","create","setHeader","submitCreateImage","files","image","idModel","formData","FormData","append","ajax","contentType","processData","Promise","reject","dataFile","setMainImage","file","setMediaStatus","catch","err","attachmentId","initEdit","previewImage","mediaMeta","priviewSetting","method","allowedTypes","fileName","multiple","showDelete","showPreview","showDone","statusBarWidth","dragdropWidth","onSuccess","xhr","attr","path","onError","errMsg","html","deleteCallback","element","pd","priviewImage","uploadFile","submitUpdateGallery","submitUpdateImage","earningService","galleryInit","pageLoadSuccess","galleryId","findMyMediaGallery","deleteImageGallery","countPaidItem","imageId","myGaleries","findMyGalleries","myGalleries","setGalleryStatus","deleteProcessing","deleteGallery","countPaidGallery","videoService","options","findMyVideoGallery","deleteVideoGallery","deleteVideo","showVideoDetail","setVideoStatus","videoId","uploadInit","unitPrices","posterSettings","poster","trailerSettings","trailer","data1","fullMovieSettings","fullMovie","submitUploadVideo","submitUpdateVideo","authService","settings","password","oldPassword","newPassword","newpPasswordRetype","submitOtherSetting","updateOtherSetting","submitChangePassword","changePassword","notify","countryInit","contact","submitUpdateContact","updateContact","payment","paymentValue","min","paymentInit","JSON","parse","submitUpdatePayment","updatePayment","suspend","reason","check","submitDisableAccount","suspendAccount","initSettings","scheduleService","schedule","nextLiveShow","monday","tuesday","wednesday","thursday","friday","saturday","sunday","scheduleInit","datetimepicker","debug","format","minDate","moment","showTodayButton","showClear","target","parent","find","prop","click","val","submitUpdateSchedule","setSchedule","timePeriod","group","start","end","earnings","submitSearch","useCurrent","date","maxDate","earningInit","pagination","findMe","submitFilterPeriod","loadMoreReport","changeGroup","showDayDetail","details","filterByDay","showNoneDetail","earningId","detail","filterByDefault","_","onlineService","totalPages","modelOnlineNull","keyword","filter","styleModelItem","getData","widthScreen","widthItems","floor","category","categoryId","users","total","customSplitStringTags","tags","arr","getTopModels","topModels","setPage","onlineInit","setInterval","setFilter","getModelsByCategory","setFavorite","favorite","isRotate","modelRotates","thread","getModelRotateImages","isArray","images","forEach","lastCaptureImage","currentTab","setTab","getMedia","getModelVideos","videos","getModelGalleries","galleries","changePage","checkOwner","owner","galleryPrice","rejectTransaction","approveTransaction","showTransactionDetail","transaction","payoutService","startDate","toDate","typeRequest","dateFrom","dateTo","$watch","showRequestPayout","earningByRequestedDate","previousPayout","pendingBalance","endDate","convertedStartDate","convertedEndDate","getFullYear","getMonth","getDate","getEarningByRequestedDate","amount","getLastestRequestPayout","getTotalPendingBalance","toFixed","comments","request","note","studioId","getComments","resp","comment","addComment","newComment","productImage","uploadStatus","submit","productService","quantity","buy","product","inStock","orderService","order","shippingStatus","updatedShippingStatus"],"mappings":"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","file":"controller.js","sourcesContent":["/* \n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n\n'use strict';\nangular.module('matroshkiApp').controller('chatSettingCtrl', [ '$scope', 'appSettings', 'chatSettingService', function ($scope, appSettings, chatSettingService) {\n  $scope.performerchat = [];\n  //get chat settings data;\n  chatSettingService.get(appSettings.USER.role, appSettings.USER.id).then(function (data) {\n    $scope.performerchat = data.data;\n  });\n  $scope.saveChanges = function (form) {\n    var settingsData = angular.copy($scope.performerchat);\n    chatSettingService.update(appSettings.USER.id, settingsData).then(function (data) {\n      if (data.data.success) {\n        return alertify.success(data.data.message);\n      }\n      return  alertify.error(data.data.message);\n\n\n    });\n  };\n}]);","'use strict';\r\n\r\nangular.module('matroshkiApp')\r\n.controller('streamCtrl',[ '$scope', '$timeout', 'appSettings', '$uibModal',\r\n\t'socket', 'PerformerChat', 'chatService', 'chatSettingService', '$http','commonHelper', 'userService',\r\n\tfunction ($scope, $timeout, appSettings, $uibModal, socket, PerformerChat, chatService, chatSettingService, $http,commonHelper, userService) {\r\n\t$scope.tablist = 'profiles';\r\n\tif (!appSettings.USER || appSettings.USER.role != 'model') {\r\n\t\t$('#videos-container').addClass('loader');\r\n    }\r\n   var reTimeoutRoom = null ;\r\n\t// using single socket for RTCMultiConnection signaling\r\n\tvar onMessageCallbacks = {};\r\n\t$scope.isGroupLive = false;\r\n\t$scope.isPrivateChat = false;\r\n\t$scope.isOffline = false;\r\n\t$scope.groupLink = null;\r\n\t$scope.roomId = null;\r\n  $scope.currentModelId = null;\r\n\t$scope.virtualRoom = null;\r\n\r\n  $scope.modelId = null;\r\n\r\n\t$scope.streamingInfo = {\r\n\t\tspendTokens: 0,\r\n\t\ttime: 0,\r\n\t\ttokensReceive: 0,\r\n\t\ttype: 'public',\r\n\t\thasRoom: true\r\n\t};\r\n\r\n\tvar threadId;\r\n\t$scope.totalView = 0;\r\n\t$scope.isStreaming = false;\r\n\r\n\tfunction reCountMember() {\r\n\t\tif (!threadId) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsocket.emit('countMember', threadId, function(data) {\r\n\t\t\t$scope.totalView = data.guests + data.members;\r\n\t\t\t$scope.$$phase || $scope.$apply();\r\n\t\t});\r\n\r\n\t\t$timeout(function() {\r\n\t\t\treCountMember();\r\n\t\t}, 10000);\r\n\t}\r\n\r\n\tsocket.on('broadcast-message', function (data) {\r\n\t\tif (data.sender == connection.userid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (onMessageCallbacks[data.channel]) {\r\n\t\t\tonMessageCallbacks[data.channel](data.message);\r\n\t\t}\r\n\t});\r\n\r\n\tsocket.onGroupChat(function (data) {\r\n\t\t// console.log(data);\r\n\r\n\t\tif (PerformerChat.model_id == data.model) {\r\n\t\t\t$scope.isGroupLive = data.online;\r\n\t\t\t$scope.isOffline = true;\r\n\t\t\t$('#videos-container').removeClass('loader');\r\n\t\t\tvar virtualRoom = data.virtualRoom ? '?vr=' + data.virtualRoom : '';\r\n\t\t\t$scope.groupLink = appSettings.BASE_URL + 'members/groupchat/' + data.model + virtualRoom;\r\n\t\t} else {\r\n\t\t\t$('#offline-image').show();\r\n\t\t\t$scope.isOffline = true;\r\n\t\t}\r\n\t});\r\n\tsocket.on('public-room-status', function (status) {\r\n\t\tif (!status) {\r\n\t\t\t$('#videos-container').removeClass('loader');\r\n\t\t\t$('#offline-image').show();\r\n\t\t\t$scope.isOffline = true;\r\n\t\t} else {\r\n\t\t\t$('#videos-container').addClass('loader');\r\n\t\t\t$('#offline-image').hide();\r\n\t\t\t$scope.isPrivateChat = false;\r\n\t\t\t$scope.isGroupLive = false;\r\n\t\t\t$scope.isOffline = false;\r\n\t\t}\r\n\t});\r\n\tsocket.onModelInitPublicChat(function (data) {\r\n\t\t$scope.virtualRoom = data.broadcastid;\r\n\r\n\t\t$scope.isPrivateChat = false;\r\n\t\t$scope.isGroupLive = false;\r\n\t\t// if($('#offline-image').length > 0){\r\n\t\t$('#offline-image').hide();\r\n\t\t// }\r\n\t\t//$scope.joinBroadcast($scope.roomId, data.broadcastid);\r\n\t\t$('#videos-container').addClass('loader');\r\n\t\t$timeout(function () {\r\n\t\t\tconst isLoading = $('#videos-container').hasClass('loader');\r\n\t\t\tif(isLoading){\r\n\t\t\t\tlocation.reload();\r\n\t\t\t}\r\n\t\t}, 7000);\r\n\r\n\t});\r\n\r\n\t$scope.isShowPrivateMessage = false;\r\n\r\n\tsocket.on('model-private-status', function (data) {\r\n    //      console.log(data);\r\n\r\n    if (PerformerChat && data.modelId == PerformerChat.model_id) {\r\n\t\t\t$scope.isPrivateChat = data.isStreaming;\r\n\t\t\t$scope.isOffline = true;\r\n\t\t\tif (data.isStreaming) {\r\n\t\t\t\tif ($('#offline-image').length > 0) {\r\n\r\n\t\t\t\t\t$('#offline-image').hide();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif ($('#offline-image').length > 0) {\r\n\r\n\t\t\t\t\t$('#offline-image').show();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ($scope.streamingInfo.type == 'private' && !data.isStreaming) {\r\n\t\t\tif (!$scope.isShowPrivateMessage) {\r\n\t\t\t\t// alertify.error('Model stopped video call.', 30);\r\n\t\t\t\t$scope.isShowPrivateMessage = true;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tsocket.on('member-missing-tokens', function (chatType) {\r\n\t\t// console.log(chatType);\r\n\t\tif (chatType == 'private') {\r\n\t\t\talertify.warning('User tokens do not enough, private chat have disconnected');\r\n\t\t\tsocket.emit('model-leave-room');\r\n\t\t\t$timeout(function () {\r\n\t\t\t\twindow.location.href = appSettings.BASE_URL + 'models/live';\r\n\t\t\t}, 3000);\r\n\t\t}\r\n\t});\r\n\r\n\tsocket.on('disconnectAll', function (data) {\r\n\t\tif (appSettings.CHAT_ROOM_ID != data.id && data.ownerId == appSettings.USER.id) {\r\n\t\t\tvar modalInstance = $uibModal.open({\r\n\t\t\t\tanimation: true,\r\n\t\t\t\ttemplateUrl: appSettings.BASE_URL + 'app/modals/close-modal/modal.html?v=' + Math.random().toString(36).slice(2),\r\n\t\t\t\tcontroller: 'modalCloseCtrl',\r\n\t\t\t\tbackdrop: 'static',\r\n\t\t\t\tkeyboard: false\r\n\t\t\t});\r\n\t\t\tmodalInstance.result.then(function (res) {\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n  var timeoutVideo = null;\r\n  var steamId = null;\r\n\t$scope.connectionNow = null;\r\n\t// initializing RTCMultiConnection constructor.\r\n\t$scope.isStreaming = null;\r\n  $scope.currentConnectStart = null;\r\n\tfunction initRTCMultiConnection(userid) {\r\n   \t  var connection = new RTCMultiConnection();\r\n   \t  // connection.resources.firebaseio = 'https://xcamsv2.firebaseIO.com/';;\r\n   \t  // connection.enableLogs = true;\r\n      // connection.socketURL = appSettings.SOCKET_URL + '/';\r\n      // connection.socketOptions = {\r\n      //   'query': commonHelper.obToquery({token: appSettings.TOKEN}),\r\n      //   path: '/socket.io-client'\r\n      // };\r\n      connection.socketURL = appSettings.RTC_URL;\r\n\r\n\r\n    connection.socketMessageEvent = 'video-broadcast-' + ($scope.roomId || window.appSettings.CHAT_ROOM_ID);\r\n    $scope.connectionNow = connection;\r\n    connection.getExternalIceServers = false;\r\n    connection.videosContainer  = document.getElementById('videos-container');\r\n    connection.channel = connection.sessionid = connection.userid = userid || connection.userid;\r\n\r\n    connection.sdpConstraints.mandatory = {\r\n      OfferToReceiveAudio: true,\r\n      OfferToReceiveVideo: true\r\n    };\r\n\r\n\r\n    connection.onMediaError = function (error) {\r\n      //              JSON.stringify(error)\r\n\r\n      alertify.alert('Warning', error.message);\r\n    };\r\n\r\n      connection.onstream = function (event) {\r\n        const numOfVideos = connection.videosContainer.childElementCount;\r\n        if(numOfVideos > 0){\r\n          return true;\r\n\t\t\t\t}\r\n        if (connection.isInitiator && event.type !== 'local') {\r\n          return;\r\n\t\t\t\t}\r\n        event.mediaElement.removeAttribute('src');\r\n        event.mediaElement.removeAttribute('srcObject');\r\n\r\n        connection.isUpperUserLeft = false;\r\n\r\n        if (event.type == 'local' && $scope.streamingInfo.type == 'public') {\r\n          var timeout = null;\r\n          var i = 0;\r\n\r\n          var initNumber = 1;\r\n          var capture = function capture() {\r\n\t\t\t\t\t\tconsole.log('4 ', event);\r\n            connection.takeSnapshot(event.userid, function (snapshot) {\r\n\r\n              $http.post(appSettings.BASE_URL + 'api/v1/rooms/' + appSettings.CHAT_ROOM_ID + '/setImage', {\r\n                base64: snapshot,\r\n                shotNumber: initNumber\r\n              });\r\n            });\r\n            initNumber = initNumber < 6 ? initNumber + 1 : 1;\r\n\r\n            timeout = setTimeout(capture, 30000);\r\n          };\r\n          // capture(); // will review it later\r\n\t\t\t\t\tconsole.log('5 ', event);\r\n          $scope.$on('destroy', function () {\r\n            clearTimeout(timeout);\r\n            clearTimeout(timeoutVideo);\r\n            i = 0;\r\n          });\r\n          var recordingInterval = 10000;\r\n//          var recordSteam = function recordSteam() {\r\n//            var recorder = {\r\n//              video: RecordRTC(event.stream, {\r\n//                type: 'video'\r\n//              })\r\n//            };\r\n//\r\n//            recorder.video.startRecording();\r\n//\r\n//            connection.streamEvents[event.streamid].recorder = recorder;\r\n//          };\r\n//          timeoutVideo = setTimeout(function(){\r\n//              recordSteam();\r\n//           var recordToServer = function recordToServer() {\r\n//            i++;\r\n//             var recorder = connection.streamEvents[event.streamid].recorder;\r\n//            recorder.video.stopRecording(function (singleWebM) {\r\n//              var blog = this.getBlob();\r\n//               var formData = new FormData();\r\n//\r\n//              formData.append('video-filename', i + 'video-stream.webm');\r\n//              formData.append('video-blob', blog);\r\n//              formData.append('type', $scope.streamingInfo.type);\r\n//\r\n//              $http({\r\n//                method: 'POST',\r\n//                url: appSettings.BASE_URL + 'api/v1/rooms/' + appSettings.CHAT_ROOM_ID + '/recordVideo?userId=' + appSettings.USER.id + '&session=' + event.userid,\r\n//                headers: {'Content-Type': undefined},\r\n//                transformRequest: angular.identity,\r\n//                data: formData\r\n//\r\n//              }).then(function (err) {\r\n//\r\n//                recordSteam();\r\n//                timeoutVideo = setTimeout(recordToServer, recordingInterval);\r\n//              }, function () {\r\n//                recordSteam();\r\n//                timeoutVideo = setTimeout(recordToServer, recordingInterval);\r\n//              });\r\n//\r\n//            });\r\n//\r\n//          };\r\n//            timeoutVideo = setTimeout(recordToServer, recordingInterval);\r\n//\r\n//          },3000);\r\n        }\r\n\r\n         if (connection.isInitiator == false && event.type === 'remote') {\r\n          $scope.isStreaming = true;\r\n          connection.dontCaptureUserMedia = true;\r\n          connection.attachStreams = [event.stream];\r\n\r\n          connection.sdpConstraints.mandatory = {\r\n            OfferToReceiveAudio: true,\r\n            OfferToReceiveVideo: true\r\n          };\r\n          clearTimeout(reTimeoutRoom);\r\n          $('#offline-image').hide();\r\n          $('#videos-container').removeClass('loader');\r\n\t\t\t\t}\r\n        steamId = event.streamid;\r\n        var video = document.createElement('video');\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvideo.setAttributeNode(document.createAttribute('autoplay'), true);\r\n\t\t\t\t\tvideo.setAttributeNode(document.createAttribute('playsinline'), true);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tvideo.setAttribute('autoplay', true);\r\n\t\t\t\t\t\tvideo.setAttribute('playsinline', true);\r\n\t\t\t\t}\r\n\t\t\t\tif(event.type === 'local') {\r\n\t\t\t\t\tvideo.volume = 0;\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tvideo.setAttributeNode(document.createAttribute('muted'));\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tvideo.setAttribute('muted', true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvideo.srcObject = event.stream;\r\n\t\t\t\tvideo.controls = true;\r\n\t\t\t\tvar width = parseInt(connection.videosContainer.clientWidth);\r\n\t\t\t\t$scope.isStreaming = true;\r\n\t\t\t\tvar mediaElement = getHTMLMediaElement(video, {\r\n\t\t\t\t\t\ttitle: '',\r\n\t\t\t\t\t\tbuttons: [],\r\n\t\t\t\t\t\twidth: width,\r\n\t\t\t\t\t\tshowOnMouseEnter: false\r\n\t\t\t\t});\r\n\t\t\t\tconnection.videosContainer.appendChild(mediaElement);\r\n\t\t\t\tmediaElement.id = event.streamid;\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tmediaElement.media.play();\r\n\t\t\t\t}, 5000);\r\n      };\r\n    //disable log\r\n    connection.enableLogs = false;\r\n    return connection;\r\n  }\r\n   socket.on('broadcast-stopped', function () {\r\n        console.log('Broadcast has been stopped.');\r\n        $('#offline-image').show();\r\n        $('#videos-container').removeClass('loader');\r\n      });\r\n\r\n\r\n\t// this RTCMultiConnection object is used to connect with existing users\r\n\tvar connection = initRTCMultiConnection();\r\n\r\n\r\n\t$scope.initRoom = function (roomId, virtualRoom) {\r\n\t\t$scope.roomId = roomId;\r\n\t\t$scope.virtualRoom = virtualRoom;\r\n\r\n\t\t//get model streaming\r\n\t\tsocket.emit('join-broadcast', {\r\n\t\t\tbroadcastid: $scope.virtualRoom,\r\n\t\t\troom: $scope.roomId,\r\n\t\t\tuserid: connection.userid,\r\n\t\t\topenBroadcast: false,\r\n\t\t\ttypeOfStreams: {\r\n\t\t\t\tvideo: false,\r\n\t\t\t\tscreen: false,\r\n\t\t\t\taudio: false,\r\n\t\t\t\toneway: true\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t// ask node.js server to look for a broadcast\r\n\t// if broadcast is available, simply join it. i.e. \"join-broadcaster\" event should be emitted.\r\n\t// if broadcast is absent, simply create it. i.e. \"start-broadcasting\" event should be fired.\r\n\t// TODO - model side should start broadcasting and member/client side should join only\r\n  $scope.openBroadcast = function (room, virtualRoom) {\r\n    $scope.roomId = room;\r\n    $scope.virtualRoom = virtualRoom;\r\n    //TODO - hide start button\r\n\r\n\t\tconnection.session = {\r\n\t\t\tvideo: true,\r\n\t\t\tscreen: false,\r\n\t\t\taudio: true,\r\n\t\t\toneway: true\r\n\t\t};\r\n\r\n\t\tsocket.emit('join-broadcast', {\r\n\t\t\tbroadcastid: $scope.virtualRoom,\r\n\t\t\troom: $scope.roomId,\r\n\t\t\tuserid: connection.userid,\r\n\t\t\ttypeOfStreams: connection.session,\r\n\t\t\topenBroadcast: true\r\n\t\t});\r\n\t\t$scope.isStreaming = true;\r\n    $('#startStream_' + room).hide();\r\n\t};\r\n\r\n\t/**\r\n  * join broadcast directly, use for member side\r\n  */\r\n\r\n\t$scope.joinBroadcast = function (room, virtualRoom) {\r\n        //count online member\r\n        threadId = room;\r\n        reCountMember();\r\n\t\t//check model is online / streaming then open broadcast.\r\n\t\tsocket.emit('has-broadcast', virtualRoom, function (has) {\r\n\r\n\t\t\tif (!has) {\r\n\t\t\t\t//TODO - should show nice alert message\r\n\t\t\t\t$('#offline-image').show();\r\n        //       $scope.isOffline = true;\r\n\t\t\t\t$('#videos-container').removeClass('loader');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t$scope.isPrivateChat = false;\r\n\t\t\t$scope.isGroupLive = false;\r\n\t\t\t$scope.isOffline = false;\r\n\r\n\t\t\t$scope.roomId = room;\r\n\t\t\t$scope.virtualRoom = virtualRoom;\r\n\t\t\t//TODO - check model room is open or not first?\r\n\t\t\tconnection.session = {\r\n\t\t\t\tvideo: true,\r\n\t\t\t\tscreen: false,\r\n\t\t\t\taudio: true,\r\n\t\t\t\toneway: true\r\n\t\t\t};\r\n\t\t\tsocket.emit('join-broadcast', {\r\n\t\t\t\tbroadcastid: $scope.virtualRoom,\r\n\t\t\t\troom: $scope.roomId,\r\n\t\t\t\tuserid: connection.userid,\r\n\t\t\t\ttypeOfStreams: connection.session\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n  $scope.privateChatRoom = null;\r\n\r\n\r\n\t// this event is emitted when a broadcast is already created.\r\n// this event is emitted when a broadcast is already created.\r\n  socket.on('join-broadcaster', function (broadcaster, typeOfStreams) {\r\n    console.log('join-broadcaster');\r\n    connection.session = typeOfStreams;\r\n    connection.channel = connection.sessionid = broadcaster.userid;\r\n\r\n    connection.sdpConstraints.mandatory = {\r\n\t\t\tOfferToReceiveVideo: true,\r\n\t\t\tOfferToReceiveAudio: true\r\n    };\r\n      (function reCheckRoomPresence() {\r\n\r\n             socket.emit('check-broadcast-presence', broadcaster.broadcastid, function (isRoomExists) {\r\n\r\n              if (isRoomExists) {\r\n                setTimeout(function () {\r\n\r\n                  connection = initRTCMultiConnection();\r\n                  connection.session = typeOfStreams;\r\n                  $scope.broadcaster = broadcaster;\r\n\r\n                  connection.channel = connection.sessionid = broadcaster.userid;\r\n\r\n                  connection.sdpConstraints.mandatory = {\r\n                    OfferToReceiveVideo: true,\r\n                    OfferToReceiveAudio: true\r\n                  };\r\n                  connection.join(broadcaster.userid, {\r\n                    userid: broadcaster.userid,\r\n                    extra: {},\r\n                    session: connection.session\r\n                  });\r\n\r\n                }, 1000);\r\n                if($scope.isStreaming){\r\n                  return;\r\n                }\r\n              }\r\n              if (connection) {\r\n                connection.close();\r\n              }\r\n              reTimeoutRoom = setTimeout(reCheckRoomPresence, 5000);\r\n            });\r\n          })();\r\n\r\n      $scope.isStreaming = true;\r\n    });\r\n\r\n\t// this event is emitted when a broadcast is absent.\r\n\tsocket.on('start-broadcasting', function (typeOfStreams) {\r\n\r\n     console.log('start-broadcasting');\r\n\t\t// host i.e. sender should always use this!\r\n\t\tconnection.sdpConstraints.mandatory = {\r\n\t\t\tOfferToReceiveVideo: false,\r\n\t\t\tOfferToReceiveAudio: false\r\n\t\t};\r\n\r\n\t\tconnection.session = typeOfStreams;\r\n\t\tconnection.dontTransmit = true;\r\n    connection.open(connection.userid);\r\n//    if($scope.currentConnectStart){\r\n//      connection.close();\r\n//    }else{\r\n//      $scope.currentConnectStart = true;\r\n//    }\r\n\r\n//\t\tif (connection.broadcastingConnection) {\r\n//\t\t\t// if new person is given the initiation/host/moderation control\r\n//\t\t\tconnection.close();\r\n//\t\t\tconnection.broadcastingConnection = null;\r\n//\t\t}\r\n\t});\r\n  var i = 0;\r\n  socket.on('model-left', function () {\r\n      //close connect if model live\\\r\n      console.log('model-left',i);\r\n      i++;\r\n      $('#offline-image').show();\r\n      $('#videos-container').removeClass('loader');\r\n      if (!appSettings.USER || appSettings.USER.role != 'model') {\r\n      \t $scope.connectionNow.close();\r\n        connection.videosContainer.innerHTML = '';\r\n        connection.close();\r\n        $scope.isStreaming = false;\r\n      }\r\n    });\r\n\r\n\tsocket.on('broadcast-error', function (data) {\r\n\t\tif (!appSettings.USER || appSettings.USER.role != 'model') {\r\n      console.log('broadcast-error');\r\n\t\t\talertify.alert('Warning', data.msg);\r\n\t\t}\r\n\t\t$scope.isStreaming = false;\r\n\t});\r\n\r\n\t//rejoin event\r\n    socket.on('rejoin-broadcast', function (data) {\r\n\r\n      if (!appSettings.USER || appSettings.USER.role != 'model') {\r\n\r\n      socket.emit('check-broadcast-presence', data.id, function (isBroadcastExists) {\r\n        setTimeout(function () {\r\n\r\n          console.log('connection.session',connection.session);\r\n          connection.attachStreams = [];\r\n\r\n              socket.emit('join-broadcast', {\r\n                broadcastid: data.id,\r\n                room: data.room,\r\n                userid: connection.userid,\r\n                typeOfStreams: connection.typeOfStreams\r\n              });\r\n\r\n\r\n\r\n        }, 1000);\r\n\r\n      });\r\n    }\r\n//\t\tsocket.emit('join-broadcast', {\r\n//\t\t\tbroadcastid: data.id,\r\n//\t\t\troom: data.room,\r\n//\t\t\tuserid: connection.userid,\r\n//\t\t\ttypeOfStreams: connection.typeOfStreams\r\n//\t\t});\r\n    });\r\n\r\n\tfunction beep() {\r\n\t\tconst unique = new Date().getTime();\r\n\t\tvar snd = new Audio(\"/sounds/received_message.mp3?v=\" + unique);\r\n\t\tsnd.play();\r\n\t}\r\n\r\n\t$scope.sendTip = function (roomId, chatType) {\r\n\r\n\t\talertify.prompt(\"Enter your tips.\", '', function (evt, value) {\r\n\t\t\tif (angular.isNumber(parseInt(value)) && parseInt(value) > 0) {\r\n        chatService.sendTipTokens(roomId, parseInt(value)).then(function (response) {\r\n\t\t\t\t\tif (response.data.success == false) {\r\n            return alertify.warning(response.data.message);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\talertify.success(response.data.message);\r\n\t\t\t\t\t\t$scope.streamingInfo.spendTokens += parseInt(value);\r\n\t\t\t\t\t\t$scope.streamingInfo.tokens -= parseInt(value);\r\n\r\n\t\t\t\t\t\tvar sendObj = {\r\n\t\t\t\t\t\t\troomId: roomId,\r\n\t\t\t\t\t\t\ttext: 'Send ' + parseInt(value) + ' tokens',\r\n              type: chatType\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\t//emit chat event to server\r\n\t\t\t\t\t\tsocket.sendTip(sendObj);\r\n\t\t\t\t\t\tsocket.sendModelReceiveInfo({ time: 0, tokens: value });\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\talertify.error('Please enter a number.');\r\n\t\t\t\t$scope.sendTip();\r\n\t\t\t}\r\n\t\t}).set('title', 'Tip');\r\n\t};\r\n\t$scope.backToFreeChat = function(modelId, url) {\r\n\t\tif (appSettings.USER && appSettings.USER.role == 'member') {\r\n\t      socket.emit('stop-video-request',\r\n\t      {\r\n\t        data: {\r\n\t          modelId: modelId,\r\n\t        }\r\n\t      });\r\n\t    }\r\n\t    return window.location.href = url;\r\n\t};\r\n\t/**\r\n  *\r\n  * @param {type} roomId\r\n  * @returns {undefined}\r\n  */\r\n\tsocket.onModelReceiveInfo(function (data) {\r\n\t\t// $scope.streamingInfo.tokens += parseInt(data.tokens);\r\n\t\tif ($scope.streamingInfo.type == 'private' && appSettings.USER && appSettings.USER.role == 'model') {\r\n\t\t\t$scope.streamingInfo.tokensReceive += parseInt(data.tokens);\r\n\t\t\t$scope.streamingInfo.time += parseInt(data.time);\r\n\t\t}\r\n\t});\r\n\t/*\r\n if (!appSettings.USER || appSettings.USER.id != PerformerChat.model_id) {\r\n \t//event get current model online\r\n \tsocket.getCurrentModelOnline(appSettings.CHAT_ROOM_ID);\r\n\r\n \t//event receive current model online or offline (return undefined)\r\n \t$scope.modelOnline = null;\r\n \tsocket.onCurrentModelOnline(function (data) {\r\n \t\t$scope.modelOnline = _.find(data, _.matchesProperty('id', PerformerChat.model_id));\r\n\r\n \t\tif (!$scope.modelOnline || typeof $scope.modelOnline == 'undefined') {\r\n \t\t\talertify.notify('Model is offline.');\r\n \t\t\t$scope.isOffline = true;\r\n \t\t\tif($('#offline-image').length > 0){\r\n \t\t\t\t\t$('#offline-image').show();\r\n \t\t\t}\r\n \t\t\t$('#videos-container').removeClass('loader');\r\n\r\n \t\t}\r\n \t});\r\n }*/\r\n\r\n    $scope.stopStreaming = function () {\r\n      $scope.connectionNow.close();\r\n      connection.videosContainer.innerHTML = '';\r\n      connection.autoCloseEntireSession = true;\r\n      $scope.connectionNow.close();\r\n      $scope.isStreaming = false;\r\n      //call an event to socket\r\n      socket.emit('model-leave-room');\r\n      location.reload();\r\n    };\r\n\r\n\t$scope.changeStreaming = function (modelId, type) {\r\n\t\tchatSettingService.getChatPrice(modelId, type).success(function (cost) {\r\n\t\t\tvar message = type == 'group' ? 'Group chat will take you ' + cost + ' tokens each minute' : 'Private chat will take you ' + cost + ' tokens each minute';\r\n\t\t\talertify.confirm(message, function () {\r\n\t\t\t\tif (type == 'group') {\r\n\t\t\t\t\treturn window.location.href = appSettings.BASE_URL + 'members/groupchat/' + modelId;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn window.location.href = appSettings.BASE_URL + 'members/privatechat/' + modelId;\r\n\t\t\t\t}\r\n\t\t\t}).set('title', 'Confirm');\r\n\t\t});\r\n\t};\r\n\r\n\t//model's status\r\n\t$scope.statusForUpdating = '';\r\n\t$scope.modelStatus = '';\r\n\tif (appSettings.USER && appSettings.USER.role == 'model') {\r\n\t\tuserService.get().success(function(data){\r\n\t\t\t$scope.statusForUpdating = data.status;\r\n\t\t});\r\n\t}\r\n\t$scope.updateStatus = function(form){\r\n\t\tsocket.emit('updateModelStatus', {\r\n\t\t\tuserId: appSettings.USER.id,\r\n\t\t\troomId: $scope.roomId,\r\n\t\t\tstatus: $scope.statusForUpdating\r\n\t\t}, function() {\r\n\t\t\talertify.success('Updated successfully');\r\n\t\t});\r\n\t};\r\n\tsocket.on('updateModelStatus', function(data){\r\n\t\t$scope.modelStatus = data.status;\r\n\t});\r\n\r\n\t// show full screen\r\n\t$scope.isFullScreenMode = false;\r\n\t$scope.showFullScreen = function() {\r\n\t\t$scope.isFullScreenMode = true;\r\n\t\t$('.header').addClass('hidden');\r\n\t\t$('.line-menu').addClass('hidden');\r\n\t\t$('.footer').addClass('hidden');\r\n\t\t$('body').addClass('fullscreen-mode');\r\n        $('.top-detial').addClass('hidden');\r\n        $('.model-detail-section').addClass('hidden');\r\n\t\t$scope.isFullScreenMode = true;\r\n\t};\r\n\t$scope.notShowFullScreen = function() {\r\n\t\t$scope.isFullScreenMode = false;\r\n\t\t$('.header').removeClass('hidden');\r\n\t\t$('.line-menu').removeClass('hidden');\r\n\t\t$('.footer').removeClass('hidden');\r\n        $('.top-detial').removeClass('hidden');\r\n\t\t$('body').removeClass('fullscreen-mode');\r\n        $('.model-detail-section').removeClass('hidden');\r\n\t};\r\n\r\n}]);\r\n","/* \n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n\n'use strict';\nangular.module('matroshkiApp').controller('likesWidgetCtrl', [ '$scope', 'appSettings', 'likesWidgetService', function ($scope, appSettings, likesWidgetService) {\n\n  $scope.init = function (itemId, item)\n  {\n    $scope.itemId = itemId;\n    $scope.item = item;\n    likesWidgetService.count({itemId: $scope.itemId, item: $scope.item}).success(function (data, status, headers, config) {\n      $scope.totalLikes = data;\n    });\n    //check like status\n    likesWidgetService.checkMe({itemId: $scope.itemId, item: $scope.item}).success(function (data, status, headers, config) {\n      $scope.liked = data;\n    });\n  };\n\n  $scope.likeThis = function () {\n    likesWidgetService.likeMe({itemId: $scope.itemId, status: $scope.liked, item: $scope.item}).then(function (data, status, headers, config) {\n      if (data.data.status == 'error') {\n        alertify.warning(data.data.message);\n        return;\n      }\n      $scope.liked = (data.data.status == 'like') ? 1 : 0;\n      likesWidgetService.count({itemId: $scope.itemId, item: $scope.item}).success(function (data, status, headers, config) {\n        $scope.totalLikes = data;\n      });\n    });\n  };\n\n}]);","/*\r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelProfileImageCtrl', function ($scope, $uibModal, appSettings, mediaService, userService) {\r\n\r\n  $scope.currentPage = 1;\r\n  var lastPage = 1;\r\n  $scope.perPage = appSettings.LIMIT_PER_PAGE;\r\n  $scope.orderBy = 'createdAt';\r\n  $scope.sort = 'desc';\r\n\r\n  $scope.myImages = [];\r\n\r\n  $scope.loadMoreInfinite = false;\r\n\r\n  mediaService.findProfileByMe({page: lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'image', mediaType: 'profile'}).success(function (data) {\r\n    $scope.myImages = data.data;\r\n    $scope.currentPage = data.current_page;\r\n    if (lastPage < data.last_page) {\r\n      lastPage = lastPage + 1;\r\n      $scope.loadMoreInfinite = true;\r\n    }\r\n  });\r\n\r\n//make profile\r\n  $scope.makeProfile = function (index, id) {\r\n    userService.setProfile(id).then(function (data) {\r\n      if (data.data.success) {\r\n        alertify.success(data.data.message);\r\n        window.location.reload();\r\n      }\r\n    });\r\n  };\r\n  //delete image\r\n  $scope.deleteModelImage = function (key, id) {\r\n    alertify.confirm('Are you sure you want to delete this?', function () {\r\n      mediaService.deleteImage(id).then(function (data) {\r\n        if (data.data.success) {\r\n          alertify.success(data.data.message);\r\n          $scope.myImages.splice(key, 1);\r\n        } else {\r\n          alertify.error(data.data.error);\r\n        }\r\n      });\r\n    }).set('title', 'Confirm');\r\n\r\n\r\n  };\r\n//load more\r\n  $(window).scroll(function () {\r\n    if ($(window).scrollTop() == $(document).height() - $(window).height() && $scope.loadMoreInfinite) {\r\n      mediaService.findProfileByMe({page: lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'image', mediaType: 'profile'}).success(function (data) {\r\n        lastPage = lastPage + 1;\r\n\r\n\r\n        $scope.myImages = $scope.myImages.concat(data.data);\r\n\r\n\r\n\r\n        if (lastPage > data.last_page) {\r\n\r\n          $scope.loadMoreInfinite = false;\r\n        }\r\n      });\r\n    }\r\n  });\r\n  ///call upload model\r\n\r\n  $scope.showUploadModal = function (size) {\r\n    var modalInstance = $uibModal.open({\r\n      animation: true,\r\n      templateUrl: appSettings.BASE_URL + 'app/modals/model-multiple-upload/multiple-upload.html?v=' + Math.random().toString(36).slice(2),\r\n      controller: 'ModalUploadInstanceCtrl',\r\n      size: size,\r\n      backdrop: 'static',\r\n      keyboard: false,\r\n      resolve: {\r\n        type: function () {\r\n          return 'image';\r\n        },\r\n        mediaType: function () {\r\n          return 'profile';\r\n        },\r\n        parentId: function () {\r\n          return 0;\r\n        },\r\n        modelId: function () {\r\n          return appSettings.USER.id;\r\n        }\r\n      }\r\n\r\n    });\r\n    modalInstance.result.then(function (data) {\r\n      for (var i in data) {\r\n        $scope.myImages.push(data[i]);\r\n      }\r\n    });\r\n  };\r\n});","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelVideoCtrl', function ($scope, $uibModal, appSettings, mediaService, userService) {\r\n\r\n  $scope.currentPage = 1;\r\n  var lastPage = 1;\r\n  $scope.perPage = appSettings.LIMIT_PER_PAGE;\r\n  $scope.orderBy = 'createdAt';\r\n  $scope.sort = 'desc';\r\n\r\n  $scope.myVideos = [];\r\n\r\n  $scope.loadMoreInfinite = false;\r\n\r\n  mediaService.findByMe({page: lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'video'}).success(function (data) {\r\n    $scope.myVideos = data.data;\r\n    $scope.currentPage = data.current_page;\r\n    if (lastPage < data.last_page) {\r\n      lastPage = lastPage + 1;\r\n      $scope.loadMoreInfinite = true;\r\n    }\r\n  });\r\n\r\n  //delete image\r\n  $scope.deleteModelImage = function (key, id) {\r\n    alertify.confirm('Are you sure you want to delete this?', function () {\r\n      mediaService.deleteFile(id).then(function (data) {\r\n        if (data.data.success) {\r\n          alertify.success(data.data.message);\r\n          $scope.myVideos.splice(key, 1);\r\n        } else {\r\n          alertify.error(data.data.error);\r\n        }\r\n      });\r\n    }).set('title', 'Confirm');\r\n\r\n\r\n  };\r\n//load more\r\n  $scope.loadMoreImages = function () {\r\n\r\n    if ($scope.loadMoreInfinite == true) {\r\n      mediaService.findByMe({page: lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'video'}).success(function (data) {\r\n        lastPage = lastPage + 1;\r\n\r\n\r\n        $scope.myVideos = $scope.myVideos.concat(data.data);\r\n\r\n\r\n\r\n        if (lastPage > data.last_page) {\r\n\r\n          $scope.loadMoreInfinite = false;\r\n        }\r\n      });\r\n    }\r\n  };\r\n  ///call upload model\r\n\r\n  $scope.showUploadModal = function (size) {\r\n    var modalInstance = $uibModal.open({\r\n      animation: true,\r\n      templateUrl: appSettings.BASE_URL + 'app/modals/model-upload-images/upload-images.html?v=' + Math.random().toString(36).slice(2),\r\n      controller: 'ModalUploadInstanceCtrl',\r\n      size: size,\r\n      backdrop: 'static',\r\n      keyboard: false,\r\n      resolve: {\r\n        type: function () {\r\n          return 'video';\r\n        },\r\n        mediaType: function () {\r\n          return 'video';\r\n        }\r\n      }\r\n\r\n    });\r\n    modalInstance.result.then(function (data) {\r\n      for (var i in data) {\r\n        $scope.myVideos.push(data[i]);\r\n      }\r\n    });\r\n  };\r\n});","/* \n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n\n'use strict';\nangular.module('matroshkiApp').controller('modelProfileCtrl', function ($scope, appSettings, userService, countryService, categoryService) {\n\n  $scope.profile = [];\n  $scope.performer = [];\n  $scope.countries = [];\n  $scope.states = [];\n  $scope.cities = [];\n\n  userService.get().then(function (data) {\n    $scope.profile = data.data;\n  });\n  userService.getPerformer().then(function (data) {\n    $scope.performer = data.data;\n    $scope.performer.category_id = parseInt($scope.performer.category_id);\n    $scope.performer.age = (parseInt($scope.performer.age) > 0 ) ? parseInt($scope.performer.age) : null;\n    $scope.performer.city_id = parseInt($scope.performer.city_id);\n    $scope.performer.countryId = parseInt($scope.performer.countryId);\n    $scope.performer.country_id = parseInt($scope.performer.country_id);\n//    $scope.performer.height = parseInt($scope.performer.height);\n    $scope.performer.parentId = parseInt($scope.performer.parentId);\n    $scope.performer.stateId = parseInt($scope.performer.stateId);\n    $scope.performer.state_id = parseInt($scope.performer.state_id);\n    $scope.performer.user_id = parseInt($scope.performer.user_id);\n    $scope.performer.tokens = parseInt($scope.performer.tokens);\n    \n    \n    if (data.data.languages != '') {\n      $scope.performer.languages = data.data.languages.split(', ');\n    }\n    countryService.getCountries().then(function (data) {\n      $scope.countries = data.data;\n    });\n    countryService.getStates($scope.performer.country_id).then(function (data) {\n      $scope.states = data.data;\n    });\n    countryService.getCities($scope.performer.state_id).then(function (data) {\n      $scope.cities = data.data;\n    });\n  });\n  $scope.ages = [];\n\n  $scope.init = function () {\n    var i;\n    for (i = 18; i <= 59; i++) {\n      $scope.ages.push(i);\n    }\n    $scope.heightList = [\n      {\n        value: 140,\n        text: '4.6 (140 cm)'\n      },\n      {\n        value: 141,\n        text: '4.6 (141 cm)'\n      },\n      {\n        value: 142,\n        text: '4.7 (142 cm)'\n      },\n      {\n        value: 143,\n        text: '4.7 (143 cm)'\n      }\n      ,\n      {\n        value: 144,\n        text: '4.7 (144 cm)'\n      },\n      {\n        value: 145,\n        text: '4.8 (145 cm)'\n      },\n      {\n        value: 146,\n        text: '4.8 (146 cm)'\n      },\n      {\n        value: 147,\n        text: '4.8 (147 cm)'\n      },\n      {\n        value: 148,\n        text: '4.9 (148 cm)'\n      },\n      {\n        value: 149,\n        text: '4.9 (149 cm)'\n      },\n      {\n        value: 150,\n        text: '4.9 (150 cm)'\n      },\n      {\n        value: 151,\n        text: '5.0 (151 cm)'\n      },\n      {\n        value: 152,\n        text: '5.0 (152 cm)'\n      },\n      {\n        value: 153,\n        text: '5.0 (153 cm)'\n      },\n      {\n        value: 154,\n        text: '5.1 (154 cm)'\n      },\n      {\n        value: 155,\n        text: '5.1 (155 cm)'\n      },\n      {\n        value: 156,\n        text: '5.1 (156 cm)'\n      },\n      {\n        value: 157,\n        text: '5.1 (157 cm)'\n      },\n      {\n        value: 158,\n        text: '5.2 (158 cm)'\n      },\n      {\n        value: 159,\n        text: '5.2 (159 cm)'\n      },\n      {\n        value: 160,\n        text: '5.2 (160 cm)'\n      },\n      {\n        value: 161,\n        text: '5.3 (161 cm)'\n      },\n      {\n        value: 162,\n        text: '5.3 (162 cm)'\n      },\n      {\n        value: 163,\n        text: '5.3 (163 cm)'\n      },\n      {\n        value: 164,\n        text: '5.4 (164 cm)'\n      },\n      {\n        value: 165,\n        text: '5.4 (165 cm)'\n      },\n      {\n        value: 166,\n        text: '5.4 (166 cm)'\n      },\n      {\n        value: 167,\n        text: '5.5 (167 cm)'\n      },\n      {\n        value: 168,\n        text: '5.5 (168 cm)'\n      },\n      {\n        value: 169,\n        text: '5.5 (169 cm)'\n      },\n      {\n        value: 170,\n        text: '5.6 (170 cm)'\n      },\n      {\n        value: 171,\n        text: '5.6 (171 cm)'\n      },\n      {\n        value: 172,\n        text: '5.6 (172 cm)'\n      },\n      {\n        value: 173,\n        text: '5.7 (173 cm)'\n      },\n      {\n        value: 174,\n        text: '5.7 (174 cm)'\n      },\n      {\n        value: 175,\n        text: '5.7 (175 cm)'\n      },\n      {\n        value: 176,\n        text: '5.8 (176 cm)'\n      },\n      {\n        value: 177,\n        text: '5.8 (177 cm)'\n      },\n      {\n        value: 178,\n        text: '5.8 (178 cm)'\n      },\n      {\n        value: 179,\n        text: '5.9 (179 cm)'\n      },\n      {\n        value: 180,\n        text: '5.9 (180 cm)'\n      },\n      {\n        value: 181,\n        text: '5.9 (181 cm)'\n      },\n      {\n        value: 182,\n        text: '6.0 (182 cm)'\n      },\n      {\n        value: 183,\n        text: '6.0 (183 cm)'\n      },\n      {\n        value: 184,\n        text: '6.0 (184 cm)'\n      },\n      {\n        value: 185,\n        text: '6.1 (185 cm)'\n      },\n      {\n        value: 186,\n        text: '6.1 (186 cm)'\n      },\n      {\n        value: 187,\n        text: '6.1 (187 cm)'\n      },\n      {\n        value: 188,\n        text: '6.2 (188 cm)'\n      },\n      {\n        value: 189,\n        text: '6.2 (189 cm)'\n      },\n      {\n        value: 190,\n        text: '6.2 (190 cm)'\n      },\n      {\n        value: 191,\n        text: '6.3 (191 cm)'\n      },\n      {\n        value: 192,\n        text: '6.3 (192 cm)'\n      },\n      {\n        value: 193,\n        text: '6.3 (193 cm)'\n      },\n      {\n        value: 194,\n        text: '6.4 (194 cm)'\n      },\n      {\n        value: 195,\n        text: '6.4 (195 cm)'\n      },\n      {\n        value: 196,\n        text: '6.4 (196 cm)'\n      },\n      {\n        value: 197,\n        text: '6.5 (197 cm)'\n      },\n      {\n        value: 198,\n        text: '6.5 (198 cm)'\n      },\n      {\n        value: 199,\n        text: '6.5 (199 cm)'\n      }\n    ];\n    $scope.publics = [\n      {\n        value: 'trimmed',\n        text: 'Trimmed'\n      },\n      {\n        value: 'shaved',\n        text: 'Shaved'\n      },\n      {\n        value: 'hairy',\n        text: 'Hairy'\n      },\n      {\n        value: 'no_comment',\n        text: 'No Comment'\n      }\n\n    ];\n    $scope.categories = [];\n    $scope.selectState = 'Select a State';\n    $scope.selectCity = 'Select a City';\n    if (!$scope.performer.country_id) {\n      $scope.selectState = 'Select a Country first';\n    }\n    if (!$scope.performer.state_id) {\n      $scope.selectCity = 'Select s State first';\n    }\n\n    categoryService.all().then(function (data) {\n      $scope.categories = data.data;\n    });\n  };\n  $scope.init();\n\n  $scope.changeCountry = function (countryId) {\n    if (countryId) {\n      $scope.selectState = 'Select a State';\n    } else {\n      $scope.selectState = 'Select a Country first';\n    }\n    countryService.getStates(countryId).then(function (data) {\n      $scope.states = data.data;\n    });\n  };\n  $scope.changeState = function (stateId) {\n    if (stateId) {\n      $scope.selectCity = 'Select a City';\n    } else {\n      $scope.selectCity = 'Select a State first';\n    }\n    countryService.getCities(stateId).then(function (data) {\n      $scope.cities = data.data;\n    });\n  };\n\n  $scope.errors = {\n    state: false,\n    city: false\n  };\n\n  $scope.formSubmitted = false;\n  $scope.savePerformerProfile = function (form) {\n\n    if (!$scope.performer.state_id && $scope.performer.state_name == '') {\n      $scope.errors.state = true;\n    } else {\n      $scope.errors.state = false;\n    }\n    if (!$scope.performer.city_id && $scope.performer.city_name == '') {\n      $scope.errors.city = true;\n\n    } else {\n      $scope.errors.city = false;\n    }\n    if ($scope.errors.state || $scope.errors.city) {\n      return;\n    }\n    if (form.$valid) {\n      $scope.formSubmitted = true;\n      userService.updatePerformer($scope.performer, {firstName: $scope.profile.firstName, lastName: $scope.profile.lastName, status: $scope.profile.status}).then(function (data) {\n        if (data.data.success) {\n          alertify.success(data.data.message);\n          window.location.href = data.data.url;\n        } else {\n          $scope.formSubmitted = false;\n          alertify.error(data.data.message);\n        }\n      });\n    }\n  };\n  $scope.checkLanguage = function (tag) {\n    var myRegEx = /^[a-zA-Z]+$/;\n    return myRegEx.test(tag.text);\n  };\n\n});","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelCreateGalleryCtrl', function ($scope, galleryService, appSettings, mediaService) {\r\n\r\n  $scope.gallery = {\r\n    name: '',\r\n    description: '',\r\n    price: 100,\r\n    type: '',\r\n    status: 'public'\r\n  };\r\n\r\n\r\n  $scope.submitted = false;\r\n  $scope.errors = {};\r\n  \r\n  $scope.submitCreateGallery = function (form) {\r\n    if (form.$valid) {\r\n      $scope.submitted = true;\r\n      galleryService.create($scope.gallery).then(function (data) {\r\n        if (data.data.success) {\r\n            $scope.errors = {};\r\n          alertify.success(data.data.message);\r\n          window.location.href = data.data.url;\r\n        } else {\r\n          $scope.submitted = false;\r\n          $scope.errors = data.data.errors;\r\n          if(data.data.message){\r\n                alertify.alert(data.data.message).setHeader('Warning');\r\n            }\r\n        }\r\n      });\r\n    }\r\n  };\r\n  $scope.submitCreateImage = function (form, modelId) {\r\n    $scope.errors = {};\r\n    if(!$('#fileInputImage')[0].files.length) {\r\n      $scope.errors.image = 'Please select an image';\r\n      return false;\r\n    }\r\n    if (form.$valid) {\r\n      $scope.submitted = true;\r\n      var idModel = appSettings.USER.id;\r\n      if(modelId) {\r\n        $scope.gallery.model_id = modelId;\r\n        idModel = modelId;\r\n      }\r\n      return galleryService.create($scope.gallery)\r\n      .then(function (data) {\r\n        if (data.data.success) {\r\n          var formData = new FormData();\r\n          formData.append('myFiles', $('#fileInputImage')[0].files[0]); \r\n          return $.ajax({\r\n            url: appSettings.BASE_URL + 'api/v1/upload-items?mediaType=image&parent-id='+data.data.id+'&model-id=' + idModel,\r\n            data: formData,\r\n            type: 'POST',\r\n            contentType: false,\r\n            processData: false\r\n          });\r\n        } else {\r\n          return Promise.reject({\r\n            errors: data.data.errors,\r\n            message: data.data.message\r\n          });\r\n        }\r\n      })\r\n      .then(function(dataFile){\r\n        return mediaService.setMainImage(dataFile.file.id).then(function(){\r\n          return Promise.resolve(dataFile);\r\n        });\r\n      })\r\n      .then(function(dataFile){\r\n        return mediaService.setMediaStatus(dataFile.file.id, 'inactive');\r\n      })\r\n      .then(function(){\r\n        $scope.errors = {};\r\n        alertify.success('Create successfully');\r\n        if(!modelId) {\r\n          window.location.href = '/models/dashboard/media/image-galleries'; \r\n        }else {\r\n          window.location.href = '/admin/manager/image-gallery/'+modelId; \r\n        }\r\n      })\r\n      .catch(function(err){\r\n        $scope.submitted = false;\r\n        $scope.errors = err.errors;\r\n        alertify.alert(err.message).setHeader('Warning');\r\n      });\r\n    }\r\n    \r\n  };\r\n\r\n});","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelEditGalleryCtrl', function ($scope, galleryService, mediaService) {\r\n\r\n  $scope.gallery = {};\r\n  $scope.attachmentId = '';\r\n  $scope.initEdit = function (gallery, attachmentId) {\r\n    $scope.gallery = {\r\n      id: gallery.id,\r\n      description: gallery.description,\r\n      name: gallery.name,\r\n      price: parseInt(gallery.price),\r\n      type: gallery.type,\r\n      previewImage: gallery.previewImage,\r\n      status: gallery.status,\r\n      mediaMeta: gallery.mediaMeta\r\n    };\r\n    $scope.attachmentId = attachmentId;\r\n  };\r\n  if ($('#preview-image-uploader').length > 0) {\r\n    var priviewSetting = {\r\n      url: appSettings.BASE_URL + 'api/v1/upload-items?parent-id=0',\r\n      method: \"POST\",\r\n      allowedTypes: 'png,jpg,jpeg',\r\n      fileName: 'myFiles',\r\n      multiple: false,\r\n      showDelete: true,\r\n      showPreview: false,\r\n      showDone: true,\r\n      statusBarWidth: '100%',\r\n      dragdropWidth: '100%',\r\n      onSuccess: function (files, data, xhr)\r\n      {\r\n\r\n        if (data.success == true) {\r\n          $scope.gallery.previewImage = data.file.id;\r\n          $('#previewImg').attr('src', appSettings.BASE_URL + data.file.path);\r\n          alertify.success(data.message);\r\n\r\n        } else {\r\n          alertify.error(data.message);\r\n        }\r\n\r\n      },\r\n      onError: function (files, status, errMsg)\r\n      {\r\n        $(\"#priviewImageStatus\").html(\"<font color='red'>Upload is Failed</font>\");\r\n      },\r\n      deleteCallback: function (element, data, pd) {\r\n        mediaService.deleteFile(element.file.id).then(function (data) {\r\n          if (data.data.success) {\r\n            $scope.gallery.priviewImage = null;\r\n            alertify.success(data.data.message);\r\n          }\r\n        });\r\n      }\r\n    };\r\n    $(\"#preview-image-uploader\").uploadFile(priviewSetting);\r\n  }\r\n\r\n  $scope.errors = {};\r\n  $scope.submitUpdateGallery = function (form) {\r\n\r\n    if (form.$valid) {\r\n\r\n          galleryService.update($scope.gallery).then(function (data) {\r\n            if (data.data.success) {\r\n                $scope.errors = {};\r\n              alertify.success(data.data.message);\r\n              if (data.data.errors != '') {\r\n                alertify.warning(data.data.errors);\r\n              } else {\r\n                window.location.href = data.data.url;\r\n              }\r\n            } else {\r\n                $scope.errors = data.data.errors;\r\n                if(data.data.message){\r\n                    alertify.alert(data.data.message).setHeader('Warning');\r\n                }\r\n            }\r\n          });\r\n        \r\n\r\n    }\r\n  };\r\n\r\n  $scope.submitUpdateImage = function(form, modelId) {\r\n     if (form.$valid) {\r\n      var idModel = appSettings.USER.id;\r\n      if(modelId){\r\n        idModel = modelId;\r\n      }\r\n      return galleryService.update($scope.gallery).then(function (data) {\r\n        if (data.data.success) {\r\n          // if upload new image\r\n          if($('#fileInputImage')[0].files.length) {\r\n            var formData = new FormData();\r\n            formData.append('myFiles', $('#fileInputImage')[0].files[0]); \r\n            return $.ajax({\r\n              url: appSettings.BASE_URL + 'api/v1/upload-items?mediaType=image&parent-id='+$scope.gallery.id+'&model-id=' + idModel,\r\n              data: formData,\r\n              type: 'POST',\r\n              contentType: false,\r\n              processData: false\r\n            })\r\n            .then(function(dataFile){\r\n              return mediaService.setMainImage(dataFile.file.id)\r\n              .then(function(){\r\n                return mediaService.setMediaStatus(dataFile.file.id, 'inactive');\r\n              })\r\n              .then(function(){\r\n                // remove the old image\r\n                return mediaService.deleteImage($scope.attachmentId);\r\n              })\r\n              .then(function(){\r\n                $scope.errors = {};\r\n                alertify.success('Update successfully');\r\n                if(modelId){\r\n                  return window.location.href = '/admin/manager/image-gallery/'+modelId;   \r\n                }else {\r\n                  return window.location.href = '/models/dashboard/media/image-galleries';   \r\n                }\r\n              });\r\n            })\r\n          }else {\r\n            $scope.errors = {};\r\n            alertify.success('Update successfully');\r\n            if(modelId){\r\n              return window.location.href = '/admin/manager/image-gallery/'+modelId;   \r\n            }else {\r\n              window.location.href = '/models/dashboard/media/image-galleries'; \r\n            }\r\n          }\r\n        } else {\r\n            $scope.errors = data.data.errors;\r\n            if(data.data.message){\r\n                alertify.alert(data.data.message).setHeader('Warning');\r\n            }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n});","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelImageGalleryCtrl', function ($scope, galleryService, mediaService, appSettings, $uibModal, earningService) {\r\n\r\n  $scope.currentPage = 1;\r\n  $scope.lastPage = 1;\r\n  $scope.perPage = appSettings.LIMIT_PER_PAGE;\r\n  $scope.orderBy = 'createdAt';\r\n  $scope.sort = 'desc';\r\n\r\n  $scope.myImages = [];\r\n\r\n  $scope.loadMoreInfinite = false;\r\n  $scope.galleryInit = function (id) {\r\n    $scope.pageLoadSuccess = false;\r\n    $scope.galleryId = id;\r\n    mediaService.findMyMediaGallery({page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'image', galleryId: id}).success(function (data) {\r\n      $scope.myImages = data.data;\r\n      $scope.pageLoadSuccess = true;\r\n      $scope.currentPage = data.current_page;\r\n      if ($scope.lastPage < data.last_page) {\r\n        $scope.lastPage += 1;\r\n        $scope.loadMoreInfinite = true;\r\n      }\r\n    });\r\n  };\r\n\r\n  $scope.showUploadModal = function (modelId, size) {\r\n    var modalInstance = $uibModal.open({\r\n      animation: true,\r\n      templateUrl: appSettings.BASE_URL + 'app/modals/model-multiple-upload/multiple-upload.html?v=' + Math.random().toString(36).slice(2),\r\n      controller: 'ModalUploadInstanceCtrl',\r\n      size: size,\r\n      backdrop: 'static',\r\n      keyboard: false,\r\n      resolve: {\r\n        type: function () {\r\n          return 'image';\r\n        },\r\n        mediaType: function () {\r\n          return 'image';\r\n        },\r\n        parentId: function () {\r\n          return $scope.galleryId;\r\n        },\r\n        modelId: function (){\r\n          return modelId\r\n        }\r\n      }\r\n\r\n    });\r\n    modalInstance.result.then(function (data) {\r\n      for (var i in data) {\r\n\r\n        $scope.myImages.push(data[i]);\r\n      }\r\n    });\r\n  };\r\n  $scope.setMainImage = function (index, id) {\r\n    mediaService.setMainImage(id).then(function (data) {\r\n      if (data.data.success) {\r\n        alertify.success(data.data.message);\r\n        window.location.reload();\r\n      } else {\r\n        alertify.error(data.data.error);\r\n      }\r\n    });\r\n  };\r\n  //delete media\r\n  $scope.deleteImageGallery = function (key, id) {\r\n    alertify.confirm('Are you sure you want to delete this?', function () {\r\n      earningService.countPaidItem(id, 'image').then(function (data) {\r\n        if (data.data == 0) {\r\n          mediaService.deleteImage(id).then(function (data) {\r\n            if (data.data.success) {\r\n              alertify.success(data.data.message);\r\n              $scope.myImages.splice(key, 1);\r\n            } else {\r\n              alertify.error(data.data.error);\r\n            }\r\n          });\r\n        } else {\r\n          alertify.alert('This is a purchase image. You can not delete it.');\r\n        }\r\n      });\r\n\r\n    }).set('title', 'Confirm');\r\n\r\n\r\n  };\r\n  //set image status active or inactive\r\n  $scope.setMediaStatus = function (index, status) {\r\n    if (status == 'processing') {\r\n      return;\r\n    }\r\n    var imageId = $scope.myImages[index].id;\r\n    mediaService.setMediaStatus(imageId, status).then(function (data) {\r\n      if (data.data.success) {\r\n        alertify.success(data.data.message);\r\n        $scope.myImages[index].status = data.data.status;\r\n      } else {\r\n        alertify.error(data.data.message);\r\n      }\r\n\r\n    });\r\n  };\r\n\r\n  $(window).scroll(function () {\r\n    if ($(window).scrollTop() == $(document).height() - $(window).height() && $scope.loadMoreInfinite) {\r\n      mediaService.findMyMediaGallery({page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'image', galleryId: $scope.galleryId}).success(function (data) {\r\n        $scope.myImages = $scope.myImages.concat(data.data);\r\n        $scope.currentPage = data.current_page;\r\n        if ($scope.lastPage < data.last_page) {\r\n          $scope.lastPage += 1;\r\n          $scope.loadMoreInfinite = true;\r\n        } else {\r\n          $scope.loadMoreInfinite = false;\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n});","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelImageGalleriesCtrl', [\"$scope\", \"galleryService\", \"mediaService\", \"appSettings\", \"earningService\", function ($scope, galleryService, mediaService, appSettings, earningService) {\r\n\r\n    $scope.currentPage = 1;\r\n    $scope.lastPage = 1;\r\n    $scope.perPage = appSettings.LIMIT_PER_PAGE;\r\n    $scope.orderBy = 'createdAt';\r\n    $scope.sort = 'desc';\r\n\r\n    $scope.myGaleries = [];\r\n\r\n    $scope.loadMoreInfinite = false;\r\n\r\n    galleryService.findMyGalleries({page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'image'}).success(function (data) {\r\n      $scope.myGalleries = data.data;\r\n\r\n      $scope.currentPage = data.current_page;\r\n      if ($scope.lastPage < data.last_page) {\r\n        $scope.lastPage += 1;\r\n        $scope.loadMoreInfinite = true;\r\n      }\r\n    });\r\n\r\n    //delete media\r\n    $scope.deleteImageGallery = function (key, id) {\r\n      alertify.confirm('Are you sure you want to delete this?', function () {\r\n        mediaService.deleteFile(id).then(function (data) {\r\n          if (data.data.success) {\r\n            alertify.success(data.data.message);\r\n            $scope.myImages.splice(key, 1);\r\n          } else {\r\n            alertify.error(data.data.error);\r\n          }\r\n        });\r\n      }).set('title','Confirm');\r\n\r\n\r\n    };\r\n    //set image gallery status public or private\r\n    $scope.setGalleryStatus = function (index, status) {\r\n      var galleryId = $scope.myGalleries[index].id;\r\n      galleryService.setGalleryStatus(galleryId, status).then(function (data) {\r\n        if (data.data.success) {\r\n          $scope.myGalleries[index].status = data.data.gallery.status;\r\n          alertify.success(data.data.message);\r\n        } else {\r\n          alertify.error(data.data.message);\r\n        }\r\n      });\r\n    };\r\n\r\n    /*\r\n     * delete Gallery\r\n     * @author: Phong Le<pt.hongphong@gmail.com>\r\n     */\r\n    $scope.deleteProcessing = 0;\r\n    $scope.deleteGallery = function (index, id) {\r\n      alertify.confirm('Are you sure you want to delete this?', function () {\r\n        $scope.deleteProcessing = id;\r\n        earningService.countPaidGallery(id, 'image').then(function (data) {\r\n          if (data.data == 0) {\r\n\r\n            galleryService.deleteGallery(id).then(function (data) {\r\n              if (data.data.success) {\r\n                alertify.success(data.data.message);\r\n                $scope.myGalleries.splice(index, 1);\r\n              } else {\r\n                alertify.error(data.data.message);\r\n              }\r\n            });\r\n          } else {\r\n            alertify.alert('This is purchase galllery. You can not delete it.');\r\n            $scope.deleteProcessing = 0;\r\n          }\r\n        });\r\n\r\n      }).set('title', 'Confirm');\r\n\r\n\r\n    };\r\n    $(window).scroll(function () {\r\n      if ($(window).scrollTop() == $(document).height() - $(window).height() && $scope.loadMoreInfinite) {\r\n        galleryService.findMyGalleries({page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'image'}).success(function (data) {\r\n          $scope.myGalleries = $scope.myGalleries.concat(data.data);\r\n          $scope.currentPage = data.current_page;\r\n          if ($scope.lastPage < data.last_page) {\r\n            $scope.lastPage += 1;\r\n            $scope.loadMoreInfinite = true;\r\n          } else {\r\n            $scope.loadMoreInfinite = false;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n  }]);","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelVideoGalleriesCtrl', [\"$scope\", \"galleryService\", \"mediaService\", \"appSettings\", \"earningService\", function ($scope, galleryService, mediaService, appSettings, earningService) {\r\n\r\n    $scope.currentPage = 1;\r\n    $scope.lastPage = 1;\r\n    $scope.perPage = appSettings.LIMIT_PER_PAGE;\r\n    $scope.orderBy = 'createdAt';\r\n    $scope.sort = 'desc';\r\n\r\n    $scope.myGaleries = [];\r\n\r\n    $scope.loadMoreInfinite = false;\r\n\r\n    galleryService.findMyGalleries({page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'video'}).success(function (data) {\r\n      $scope.myGalleries = data.data;\r\n\r\n      $scope.currentPage = data.current_page;\r\n      if ($scope.lastPage < data.last_page) {\r\n        $scope.lastPage += 1;\r\n        $scope.loadMoreInfinite = true;\r\n      }\r\n    });\r\n\r\n    //delete media\r\n    $scope.deleteImageGallery = function (key, id) {\r\n      alertify.confirm('Are you sure you want to delete this?', function () {\r\n        mediaService.deleteFile(id).then(function (data) {\r\n          if (data.data.success) {\r\n            alertify.success(data.data.message);\r\n            $scope.myGalleries.splice(key, 1);\r\n          } else {\r\n            alertify.error(data.data.error);\r\n          }\r\n        });\r\n      }).set('title', 'Confirm');\r\n\r\n\r\n    };\r\n//  set video status public or private\r\n    $scope.setGalleryStatus = function (index, status) {\r\n      var galleryId = $scope.myGalleries[index].id;\r\n      galleryService.setGalleryStatus(galleryId, status).then(function (data) {\r\n        if (data.data.success) {\r\n          $scope.myGalleries[index].status = data.data.gallery.status;\r\n          alertify.success(data.data.message);\r\n        } else {\r\n          alertify.error(data.data.message);\r\n        }\r\n      });\r\n    };\r\n\r\n//delete Gallery\r\n    //@author: Phong Le<pt.hongphong@gmail.com>\r\n    $scope.deleteProcessing = 0;\r\n    $scope.deleteGallery = function (index, id) {\r\n      alertify.confirm('Are you sure you want to delete this?', function () {\r\n        $scope.deleteProcessing = id;\r\n        earningService.countPaidGallery(id, 'video').then(function (data) {\r\n          if (data.data == 0) {\r\n            galleryService.deleteGallery(id).then(function (data) {\r\n              if (data.data.success) {\r\n                alertify.success(data.data.message);\r\n                $scope.myGalleries.splice(index, 1);\r\n              } else {\r\n                alertify.error(data.data.message);\r\n              }\r\n            });\r\n          } else {\r\n            alertify.alert('This is purchase galllery. You can not delete it.');\r\n            $scope.deleteProcessing = 0;\r\n          }\r\n        });\r\n      }).set('title', 'Confirm');\r\n    };\r\n\r\n    $(window).scroll(function () {\r\n      if ($(window).scrollTop() == $(document).height() - $(window).height() && $scope.loadMoreInfinite) {\r\n        galleryService.findMyGalleries({page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'video'}).success(function (data) {\r\n          console.log(data.data);\r\n          $scope.myGalleries = $scope.myGalleries.concat(data.data);\r\n          $scope.currentPage = data.current_page;\r\n          if ($scope.lastPage < data.last_page) {\r\n            $scope.lastPage += 1;\r\n            $scope.loadMoreInfinite = true;\r\n          } else {\r\n            $scope.loadMoreInfinite = false;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n  }]);","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelVideoGalleryCtrl', [\"$scope\", \"mediaService\", \"appSettings\", \"$uibModal\", \"earningService\", \"videoService\", function ($scope, mediaService, appSettings, $uibModal, earningService, videoService) {\r\n\r\n    $scope.currentPage = 1;\r\n    $scope.lastPage = 1;\r\n    $scope.perPage = appSettings.LIMIT_PER_PAGE;\r\n    $scope.orderBy = 'createdAt';\r\n    $scope.sort = 'desc';\r\n\r\n    $scope.myVideos = [];\r\n\r\n    $scope.loadMoreInfinite = false;\r\n    $scope.galleryInit = function (id, modelId) {\r\n      $scope.galleryId = id;\r\n      const options = {\r\n        page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'video' \r\n      };\r\n      if(modelId) {\r\n        options.modelId = modelId;\r\n      }\r\n      if(id) {\r\n        options.galleryId = id;\r\n      }\r\n      mediaService.findMyVideoGallery(options).success(function (data) {\r\n        $scope.myVideos = data.data;\r\n        $scope.currentPage = data.current_page;\r\n        if ($scope.lastPage < data.last_page) {\r\n          $scope.lastPage += 1;\r\n          $scope.loadMoreInfinite = true;\r\n        }\r\n      });\r\n    };\r\n\r\n    $scope.showUploadModal = function (size) {\r\n      var modalInstance = $uibModal.open({\r\n        animation: true,\r\n        templateUrl: appSettings.BASE_URL + 'app/modals/model-multiple-upload/multiple-upload.html?v=' + Math.random().toString(36).slice(2),\r\n        controller: 'ModalUploadInstanceCtrl',\r\n        size: size,\r\n        backdrop: 'static',\r\n        keyboard: false,\r\n        resolve: {\r\n          type: function () {\r\n            return 'video';\r\n          },\r\n          mediaType: function () {\r\n            return 'video';\r\n          },\r\n          parentId: function () {\r\n            return $scope.galleryId;\r\n          }\r\n        }\r\n\r\n      });\r\n      modalInstance.result.then(function (data) {\r\n        for (var i in data) {\r\n          $scope.myVideos.push(data[i]);\r\n        }\r\n      });\r\n    };\r\n\r\n    //delete media\r\n    $scope.deleteVideoGallery = function (key, id) {\r\n      alertify.confirm('Are you sure you want to delete this?', function () {\r\n        earningService.countPaidItem(id, 'video').then(function (data) {\r\n          if (data.data == 0) {\r\n            mediaService.deleteVideo(id).then(function (data) {\r\n              if (data.data.success) {\r\n                alertify.success(data.data.message);\r\n                $scope.myVideos.splice(key, 1);\r\n              } else {\r\n                alertify.error(data.data.error);\r\n              }\r\n            });\r\n          } else {\r\n            alertify.alert('This is a purchase video. You can not delete it.');\r\n          }\r\n        });\r\n\r\n      }).set('title', 'Confirm');\r\n\r\n\r\n    };\r\n    //show video popup\r\n    $scope.showVideoDetail = function (id, size) {\r\n      \r\n      var modalInstance = $uibModal.open({\r\n        animation: true,\r\n        templateUrl: appSettings.BASE_URL + 'app/modals/video/modal.html',\r\n        controller: 'videoPopupCtrl',\r\n        size: size,\r\n        keyboard: false,\r\n        resolve: {\r\n          id: function () {\r\n            return id;\r\n          }\r\n        }\r\n\r\n      });\r\n      modalInstance.result.then(function (data) {\r\n//        window.location.reload();\r\n//        $('#account-status-' + id).text(data.accountStatus);\r\nconsole.log(data);\r\n      });\r\n    };\r\n\r\n//set image status active or inactive\r\n    $scope.setVideoStatus = function (index, status) {\r\n      if (status == 'processing') {\r\n        return;\r\n      }\r\n      var videoId = $scope.myVideos[index].id;\r\n      videoService.setVideoStatus(videoId, status).then(function (data) {\r\n        if (data.data.success) {\r\n          alertify.success(data.data.message);\r\n          $scope.myVideos[index].status = data.data.status;\r\n        } else {\r\n          alertify.error(data.data.message);\r\n        }\r\n\r\n      });\r\n    };\r\n\r\n    $(window).scroll(function () {\r\n      if ($(window).scrollTop() == $(document).height() - $(window).height() && $scope.loadMoreInfinite) {\r\n        const options = {page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'video', galleryId: $scope.galleryId};\r\n        if($scope.galleryId) {\r\n          options.galleryId = $scope.galleryId;\r\n        }\r\n        mediaService.findMyVideoGallery().success(function (data) {\r\n\r\n          $scope.myVideos = $scope.myVideos.concat(data.data);\r\n          $scope.currentPage = data.current_page;\r\n          if ($scope.lastPage < data.last_page) {\r\n            $scope.lastPage += 1;\r\n            $scope.loadMoreInfinite = true;\r\n          } else {\r\n            $scope.loadMoreInfinite = false;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n  }]);","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelVideoUploadCtrl', function ($scope, galleryService, mediaService, videoService) {\r\n\r\n  $scope.uploadInit = function (id, modelId) {\r\n    $scope.video = {};\r\n    $scope.video.ownerId = modelId;\r\n    \r\n    $scope.video.galleryId = id;\r\n    $scope.unitPrices = [\r\n      {\r\n        value: 15,\r\n        text: '15 tokens'\r\n      },\r\n      {\r\n        value: 20,\r\n        text: '20 tokens'\r\n      },\r\n      {\r\n        value: 25,\r\n        text: '25 tokens'\r\n      },\r\n      {\r\n        value: 30,\r\n        text: '30 tokens'\r\n      },\r\n      {\r\n        value: 35,\r\n        text: '35 tokens'\r\n      },\r\n      {\r\n        value: 40,\r\n        text: '40 tokens'\r\n      },\r\n      {\r\n        value: 45,\r\n        text: '45 tokens'\r\n      },\r\n      {\r\n        value: 50,\r\n        text: '50 tokens'\r\n      },\r\n      {\r\n        value: 55,\r\n        text: '55 tokens'\r\n      },\r\n      {\r\n        value: 60,\r\n        text: '60 tokens'\r\n      },\r\n      {\r\n        value: 65,\r\n        text: '65 tokens'\r\n      },\r\n      {\r\n        value: 70,\r\n        text: '70 tokens'\r\n      },\r\n      {\r\n        value: 75,\r\n        text: '75 tokens'\r\n      },\r\n      {\r\n        value: 80,\r\n        text: '80 tokens'\r\n      },\r\n      {\r\n        value: 85,\r\n        text: '85 tokens'\r\n      },\r\n      {\r\n        value: 90,\r\n        text: '90 tokens'\r\n      },\r\n      {\r\n        value: 95,\r\n        text: '95 tokens'\r\n      },\r\n      {\r\n        value: 100,\r\n        text: '100 tokens'\r\n      },\r\n      {\r\n        value: 120,\r\n        text: '120 tokens'\r\n      },\r\n      {\r\n        value: 140,\r\n        text: '140 tokens'\r\n      },\r\n      {\r\n        value: 160,\r\n        text: '160 tokens'\r\n      },\r\n      {\r\n        value: 180,\r\n        text: '180 tokens'\r\n      },\r\n      {\r\n        value: 200,\r\n        text: '200 tokens'\r\n      },\r\n      {\r\n        value: 220,\r\n        text: '220 tokens'\r\n      },\r\n      {\r\n        value: 240,\r\n        text: '240 tokens'\r\n      },\r\n      {\r\n        value: 260,\r\n        text: '260 tokens'\r\n      },\r\n      {\r\n        value: 280,\r\n        text: '280 tokens'\r\n      },\r\n      {\r\n        value: 300,\r\n        text: '300 tokens'\r\n      },\r\n      {\r\n        value: 320,\r\n        text: '320 tokens'\r\n      },\r\n      {\r\n        value: 340,\r\n        text: '340 tokens'\r\n      },\r\n      {\r\n        value: 360,\r\n        text: '360 tokens'\r\n      },\r\n      {\r\n        value: 380,\r\n        text: '380 tokens'\r\n      },\r\n      {\r\n        value: 400,\r\n        text: '400 tokens'\r\n      },\r\n      {\r\n        value: 420,\r\n        text: '420 tokens'\r\n      },\r\n      {\r\n        value: 440,\r\n        text: '440 tokens'\r\n      },\r\n      {\r\n        value: 460,\r\n        text: '460 tokens'\r\n      },\r\n      {\r\n        value: 480,\r\n        text: '480 tokens'\r\n      },\r\n      {\r\n        value: 500,\r\n        text: '500 tokens'\r\n      },\r\n      {\r\n        value: 550,\r\n        text: '550 tokens'\r\n      },\r\n      {\r\n        value: 600,\r\n        text: '600 tokens'\r\n      },\r\n      {\r\n        value: 650,\r\n        text: '650 tokens'\r\n      },\r\n      {\r\n        value: 700,\r\n        text: '700 tokens'\r\n      },\r\n      {\r\n        value: 750,\r\n        text: '750 tokens'\r\n      },\r\n      {\r\n        value: 800,\r\n        text: '800 tokens'\r\n      },\r\n      {\r\n        value: 850,\r\n        text: '850 tokens'\r\n      },\r\n      {\r\n        value: 900,\r\n        text: '900 tokens'\r\n      },\r\n      {\r\n        value: 950,\r\n        text: '950 tokens'\r\n      },\r\n      {\r\n        value: 1000,\r\n        text: '1000 tokens'\r\n      },\r\n    ];\r\n  };\r\n\r\n\r\n  if ($('#video-poster-uploader').length > 0) {\r\n    var posterSettings = {\r\n      url: appSettings.BASE_URL + 'api/v1/upload-items?mediaType=poster&parent-id=0',\r\n      method: \"POST\",\r\n      allowedTypes: 'png,jpg,jpeg',\r\n      fileName: 'myFiles',\r\n      multiple: false,\r\n      showDelete: true,\r\n      showPreview: false,\r\n      showDone: true,\r\n      statusBarWidth: '100%',\r\n      dragdropWidth: '100%',\r\n      onSuccess: function (files, data, xhr)\r\n      {\r\n\r\n        if (data.success == true) {\r\n\r\n          $scope.video.poster = data.file.id;\r\n          alertify.success(data.message);\r\n          $(\"#poster-status\").html(\"\");\r\n\r\n        } else {\r\n          // alertify.error(data.message);\r\n          $(\"#poster-status\").html(\"<font color='red'>\"+data.message+\"</font>\");\r\n        }\r\n\r\n      },\r\n      onError: function (files, status, errMsg)\r\n      {\r\n        $(\"#poster-status\").html(\"<font color='red'>Upload is Failed</font>\");\r\n      },\r\n      deleteCallback: function (element, data, pd) {\r\n        mediaService.deleteImage(element.file.id).then(function (data) {\r\n          if (data.data.success) {\r\n            $scope.video.poster = null;\r\n            alertify.success(data.data.message);\r\n          }\r\n        });\r\n      }\r\n    };\r\n    $(\"#video-poster-uploader\").uploadFile(posterSettings);\r\n  }\r\n  if ($('#video-trailer-uploader').length > 0) {\r\n    var trailerSettings = {\r\n      url: appSettings.BASE_URL + 'api/v1/upload-items?mediaType=trailer&parent-id=0',\r\n      method: \"POST\",\r\n      allowedTypes: 'mp4,m4v,ogg,ogv,webm',\r\n      fileName: 'myFiles',\r\n      multiple: false,\r\n      showDelete: true,\r\n      showPreview: false,\r\n      showDone: true,\r\n      statusBarWidth: '100%',\r\n      dragdropWidth: '100%',\r\n      onSuccess: function (files, data, xhr)\r\n      {\r\n\r\n        if (data.success == true) {\r\n\r\n          $scope.video.trailer = data.file.id;\r\n          alertify.success(data.message);\r\n          $(\"#video-trailer-status\").html('');\r\n\r\n        } else {\r\n          // alertify.error(data.message);\r\n          $(\"#video-trailer-status\").html(\"<font color='red'>\"+data.message+\"</font>\");\r\n        }\r\n\r\n      },\r\n      onError: function (files, status, errMsg)\r\n      {\r\n        $(\"#video-trailer-status\").html(\"<font color='red'>Upload is Failed</font>\");\r\n      },\r\n      deleteCallback: function (element, data, pd) {\r\n        if(data.success){\r\n          mediaService.deleteVideo(element.file.id).then(function (data1) {\r\n            if (data1.data.success) {\r\n              $scope.video.trailer = null;\r\n              alertify.success(data.data.message);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    };\r\n    $(\"#video-trailer-uploader\").uploadFile(trailerSettings);\r\n  }\r\n  if ($('#video-full-movie-uploader').length > 0) {\r\n    var fullMovieSettings = {\r\n      url: appSettings.BASE_URL + 'api/v1/upload-items?mediaType=video&parent-id=0',\r\n      method: \"POST\",\r\n      allowedTypes: 'mp4,m4v,ogg,ogv,webm',\r\n      fileName: 'myFiles',\r\n      multiple: false,\r\n      showDelete: true,\r\n      showPreview: false,\r\n      showDone: true,\r\n      statusBarWidth: '100%',\r\n      dragdropWidth: '100%',\r\n      onSuccess: function (files, data, xhr)\r\n      {\r\n\r\n        if (data.success == true) {\r\n\r\n          $scope.video.fullMovie = data.file.id;\r\n          alertify.success(data.message);\r\n          $(\"#video-full-movie-status\").html('');\r\n        } else {\r\n          // alertify.error(data.message);\r\n          $(\"#video-full-movie-status\").html(\"<font color='red'>\"+data.message+\"</font>\");\r\n        }\r\n\r\n      },\r\n      onError: function (files, status, errMsg)\r\n      {\r\n        $(\"#video-full-movie-status\").html(\"<font color='red'>Upload is Failed</font>\");\r\n      },\r\n      deleteCallback: function (element, data, pd) {\r\n        mediaService.deleteVideo(element.file.id).then(function (data) {\r\n          if (data.data.success) {\r\n            $scope.video.fullMovie = null;\r\n            alertify.success(data.data.message);\r\n          }\r\n        });\r\n      }\r\n    };\r\n    $(\"#video-full-movie-uploader\").uploadFile(fullMovieSettings);\r\n  }\r\n\r\n  $scope.formSubmitted = false;\r\n  $scope.errors = {};\r\n  \r\n  $scope.submitUploadVideo = function (form) {\r\n\r\n    if (form.$valid) {\r\n      $scope.formSubmitted = true;\r\n\r\n        videoService.create($scope.video).then(function (data) {\r\n            $scope.errors = {};\r\n          if (data.data.success) {\r\n            alertify.success(data.data.message);\r\n            window.location.href = data.data.url;\r\n            $scope.errors = {};\r\n          } else {\r\n              $scope.errors = data.data.errors;\r\n            $scope.formSubmitted = false;\r\n            if(data.data.message)\r\n                alertify.alert(data.data.message).setHeader('Warning');\r\n          }\r\n        });\r\n       \r\n    }\r\n  };\r\n  $scope.submitUpdateVideo = function (form) {\r\n\r\n    if (form.$valid) {\r\n\r\n          videoService.update($scope.video).then(function (data) {\r\n              $scope.errors = {};\r\n            if (data.data.success) {\r\n              alertify.success(data.data.message);\r\n              window.location.href = data.data.url;\r\n            } else {\r\n                $scope.errors = data.data.errors;\r\n                $scope.formSubmitted = false;\r\n                if(data.data.message)\r\n                    alertify.alert(data.data.message).setHeader('Warning');\r\n            }\r\n          });\r\n\r\n    }\r\n  };\r\n\r\n});","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelSettingCtrl', function ($scope, authService, userService, countryService) {\r\n\r\n  $scope.settings = [\r\n    {\r\n      password: {\r\n        oldPassword: '',\r\n        newPassword: '',\r\n        newpPasswordRetype: ''\r\n      }\r\n    }];\r\n  $scope.submitOtherSetting = function (form) {\r\n    if (form.$valid) {\r\n      \r\n      userService.updateOtherSetting($scope.settings).then(function (data) {\r\n        if (data.data.success) {\r\n          alertify.success(data.data.message);\r\n        } else {\r\n          alertify.error(data.data.message);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  $scope.submitChangePassword = function (form) {\r\n\r\n    if (form.$valid) {\r\n      authService.changePassword($scope.settings.password.oldPassword, $scope.settings.password.newPassword, function (data) {\r\n        if (data.success) {\r\n          alertify.success(data.message);\r\n          window.location.href = '/login';\r\n        } else {\r\n          alertify.notify(data.message, 'error', 15);\r\n        }\r\n      });\r\n    }\r\n  };\r\n  $scope.countries = [];\r\n  $scope.countryInit = function (countryId) {\r\n    countryService.getCountries().then(function (data) {\r\n      $scope.countries = data.data;\r\n    });\r\n    $scope.contact.countryId = countryId;\r\n  };\r\n\r\n  $scope.formSubmitted = false;\r\n  $scope.errors = [];\r\n  $scope.submitUpdateContact = function (form) {\r\n    if (form.$valid) {\r\n      $scope.formSubmitted = true;\r\n      userService.updateContact($scope.contact).then(function (data) {\r\n        if (data.data.success) {\r\n          alertify.success(data.data.message);\r\n          window.location.href = data.data.url;\r\n        } else {\r\n          $scope.formSubmitted = false;\r\n          alertify.error(data.data.message);\r\n          $scope.errors = data.data.errors;\r\n        }\r\n      });\r\n    }\r\n  };\r\n  $scope.payment = {};\r\n  $scope.paymentValue = [\r\n    {\r\n      min: 20\r\n    },\r\n    {\r\n      min: 50\r\n    },\r\n    {\r\n      min: 100\r\n    },\r\n    {\r\n      min: 200\r\n    },\r\n    {\r\n      min: 250\r\n    },\r\n    {\r\n      min: 500\r\n    },\r\n    {\r\n      min: 1000\r\n    }\r\n  ];\r\n  $scope.paymentInit = function (payment) {\r\n      var data = JSON.parse(payment);\r\n      \r\n    $scope.payment = data;\r\n  };\r\n  $scope.submitUpdatePayment = function (form) {\r\n    if (form.$valid) {\r\n        $scope.errors = {};\r\n      userService.updatePayment($scope.payment).then(function (data) {\r\n        if (data.data.success) {\r\n          alertify.success(data.data.message);\r\n          window.location.href = data.data.url;\r\n        } else {\r\n            console.log(data.data.errors);\r\n          $scope.errors = data.data.errors;\r\n        }\r\n      });\r\n    }\r\n  };\r\n  $scope.suspend = {\r\n    reason: '',\r\n    password: '',\r\n    check: false\r\n  };\r\n  $scope.submitted = false;\r\n  $scope.submitDisableAccount = function (form) {\r\n\r\n    if (form.$valid) {\r\n      $scope.submitted = true;\r\n      userService.suspendAccount($scope.suspend).then(function (data) {\r\n        if (data.data.success) {\r\n          alertify.success(data.data.message);\r\n          window.location.href = '/';\r\n        } else {\r\n          $scope.submitted = false;\r\n          alertify.error(data.data.message);\r\n        }\r\n      });\r\n    }\r\n  };\r\n  \r\n  $scope.initSettings = function (settings){\r\n    \r\n    $scope.settings = settings;\r\n  }\r\n\r\n});","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelScheduleCtrl', function ($scope, scheduleService, $timeout) {\r\n\r\n  $scope.schedule = {\r\n    id: null,\r\n    nextLiveShow: '',\r\n    monday: '',\r\n    tuesday: '',\r\n    wednesday: '',\r\n    thursday: '',\r\n    friday: '',\r\n    saturday: '',\r\n    sunday: ''\r\n\r\n  };\r\n\r\n  $scope.scheduleInit = function (schedule) {\r\n    if (schedule) {\r\n      $scope.schedule = schedule;\r\n    }\r\n  };\r\n  $('#nextLiveShow').datetimepicker({\r\n    debug: false,\r\n    format: 'YYYY/MM/DD HH:mm',\r\n    minDate: moment(),\r\n    showTodayButton: true,\r\n    showClear: true\r\n  });\r\n  ;\r\n  $('#nextLiveShow').on('dp.change', function (e) {\r\n    $timeout(function () {\r\n      $scope.schedule.nextLiveShow = e.target.value;\r\n    });\r\n\r\n  })\r\n  $(\"#monday, #tuesday, #wednesday, #thursday, #friday, #saturday, #sunday\").on('dp.change', function (e) {\r\n    $timeout(function () {\r\n      switch (e.target.id) {\r\n        case 'monday':\r\n          $scope.schedule.monday = e.target.value;\r\n          break;\r\n        case 'tuesday':\r\n          $scope.schedule.tuesday = e.target.value;\r\n          break;\r\n        case 'wednesday':\r\n          $scope.schedule.wednesday = e.target.value;\r\n          break;\r\n        case 'thursday':\r\n          $scope.schedule.thursday = e.target.value;\r\n          break;\r\n        case 'friday':\r\n          $scope.schedule.friday = e.target.value;\r\n          break;\r\n        case 'saturday':\r\n          $scope.schedule.saturday = e.target.value;\r\n          break;\r\n        case 'sunday':\r\n          $scope.schedule.sunday = e.target.value;\r\n          break;\r\n      }\r\n      if(e.target.value){\r\n        $('#'+e.target.id).parent().find('.schedule__notavailable-btn').prop('checked', false);\r\n      }\r\nconsole.log(e.target.value);\r\n    });\r\n  }).datetimepicker({\r\n    format: 'HH:mm'\r\n  });\r\n  $('.schedule__notavailable-btn').click(function() {\r\n    $(this).parent().find('.input-md').val('');\r\n  });\r\n  $scope.submitUpdateSchedule = function (form) {\r\n    if (form.$valid) {\r\n      scheduleService.setSchedule($scope.schedule).then(function (data) {\r\n\r\n        if (data.data.id) {\r\n          alertify.success('Update successfully.');\r\n          window.location.href = '/models/dashboard/schedule';\r\n        } else {\r\n          alertify.error('Update error');\r\n          window.location.reload();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n});","/* \n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n\n'use strict';\nangular.module('matroshkiApp').controller('modelEarningCtrl', function ($scope, $timeout, earningService, appSettings) {\n    $scope.timePeriod = {\n        group: 'day',\n        start: null,\n        end: null\n    };\n    $scope.earnings = {};\n    $scope.submitSearch = false;\n\n    $('#timePeriodStart').datetimepicker({\n        format: 'YYYY-MM-DD'\n    });\n    $('#timePeriodEnd').datetimepicker({\n        format: 'YYYY-MM-DD',\n        useCurrent: false //Important! See issue #1075\n    });\n    $(\"#timePeriodStart\").on(\"dp.change\", function (e) {\n        $timeout(function () {\n            $scope.timePeriod.start = e.target.value;\n//      $scope.timePeriod.start = $filter('date')(e.date, 'MM/dd/yyyy');\n            $('#timePeriodEnd').data(\"DateTimePicker\").minDate(e.date);\n        });\n\n    });\n    $(\"#timePeriodEnd\").on(\"dp.change\", function (e) {\n        $scope.timePeriod.end = e.target.value;\n        $('#timePeriodStart').data(\"DateTimePicker\").maxDate(e.date);\n    });\n\n    $scope.earningInit = function () {\n        $scope.currentPage = 1;\n        $scope.lastPage = 1;\n        $scope.perPage = appSettings.LIMIT_PER_PAGE;\n        $scope.orderBy = 'createdAt';\n        $scope.sort = 'desc';\n        $scope.pagination = 0;\n        $scope.timePeriod.page = 0;\n        $scope.loadMoreInfinite = false;\n\n        earningService.findMe({page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, start: $scope.timePeriod.start, end: $scope.timePeriod.end, group: $scope.timePeriod.group}).success(function (data) {\n            $scope.earnings = data.data;\n            $scope.currentPage = data.current_page;\n            if ($scope.lastPage < data.last_page) {\n                $scope.lastPage += 1;\n                $scope.loadMoreInfinite = true;\n            }\n\n        });\n//    earningService.pagination($scope.timePeriod).success(function (data) {\n//      $scope.pagination = data;\n//    });\n    };\n    $scope.earningInit();\n\n    $scope.submitFilterPeriod = function (form) {\n        $scope.currentPage = 1;\n        $scope.lastPage = 1;\n        $scope.perPage = appSettings.LIMIT_PER_PAGE;\n        $scope.orderBy = 'createdAt';\n        $scope.sort = 'desc';\n        $scope.pagination = 0;\n        $scope.timePeriod.page = 0;\n        $scope.loadMoreInfinite = false;\n\n        if (form.$valid) {\n\n            $scope.submitSearch = true;\n            earningService.findMe({page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, start: $scope.timePeriod.start, end: $scope.timePeriod.end, group: $scope.timePeriod.group}).success(function (data) {\n\n                $scope.earnings = data.data;\n                $scope.currentPage = data.current_page;\n                if ($scope.lastPage < data.last_page) {\n                    $scope.lastPage += 1;\n                    $scope.loadMoreInfinite = true;\n                }\n\n            });\n        }\n    };\n    $(window).scroll(function () {\n        if ($(window).scrollTop() == $(document).height() - $(window).height() && $scope.loadMoreInfinite) {\n            $scope.loadMoreReport();\n        }\n    });\n    $scope.loadMoreReport = function () {\n//    earningService.findMe($scope.timePeriod, $scope.page).then(function (data) {\n//      if (data.data.length > 0) {\n//        $scope.earnings = $scope.earnings.concat(data.data);\n//        $scope.timePeriod.page = parseInt($scope.timePeriod.page + 1);\n//      } else {\n//        $scope.pagination = 0;\n//        $scope.loadMoreInfinite = false;\n//      }\n//    });\n        earningService.findMe({page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, start: $scope.timePeriod.start, end: $scope.timePeriod.end, group: $scope.timePeriod.group}).success(function (data) {\n\n            $scope.earnings = $scope.earnings.concat(data.data);\n            $scope.currentPage = data.current_page;\n            if ($scope.lastPage < data.last_page) {\n                $scope.lastPage += 1;\n                $scope.loadMoreInfinite = true;\n            } else {\n                $scope.loadMoreInfinite = false;\n            }\n\n        });\n    };\n    //return null if change group by\n    $scope.changeGroup = function () {\n        $scope.earnings = {};\n        $scope.submitSearch = false;\n        $scope.earningInit();\n    };\n    //show detail group by day\n\n\n    $scope.showDayDetail = function (index, date) {\n//    $scope.earnings[index].details = [];\n//    earningService.filterByDay(date).then(function (data) {\n//\n//      $scope.earnings[index].details = data.data;\n//\n//    });\n        if (typeof $scope.earnings[index].details != 'undefined' && $scope.earnings[index].details) {\n            $scope.earnings[index].details = null;\n            return false;\n        } else {\n            $scope.earnings[index].details = [];\n        }\n        earningService.filterByDay(date).then(function (data) {\n\n            $scope.earnings[index].details = data.data;\n\n        });\n\n    };\n    //Show detail by none\n    $scope.showNoneDetail = function (index, earningId) {\n//    $scope.earnings[index].detail = [];\n//    earningService.filterByDefault(earningId).then(function (data) {\n//      $scope.earnings[index].detail = data.data;\n//    });\n        if (typeof $scope.earnings[index].detail != 'undefined' && $scope.earnings[index].detail) {\n            \n            $scope.earnings[index].detail = null;\n            return;\n        } else {\n            $scope.earnings[index].detail = [];\n        }\n//    \n\n        earningService.filterByDefault(earningId).then(function (data) {\n            $scope.earnings[index].detail = data.data;\n        });\n    };\n});","'use strict';\r\nangular.module('matroshkiApp')\r\n.controller('modelOnlineCtrl', [\r\n  '$scope', 'appSettings', '_', 'onlineService', 'socket',\r\n  function ($scope, appSettings, _, onlineService, socket) {\r\n    $scope.currentPage = 1;\r\n    $scope.lastPage = 1;\r\n    $scope.perPage = appSettings.LIMIT_PER_PAGE;\r\n    $scope.orderBy = 'isStreaming';\r\n    $scope.sort = 'desc';\r\n    $scope.totalPages = 0;\r\n    $scope._ = _;\r\n    $scope.modelOnlineNull = false;\r\n    $scope.keyword = '';\r\n    $scope.filter = 'week';\r\n    $scope.styleModelItem = {};\r\n    $scope.getData = function () {\r\n        var widthScreen = $(window).width();\r\n        if(widthScreen > 2000){\r\n            var widthItems = Math.floor(100/Math.floor(widthScreen/280));\r\n            $scope.styleModelItem = {\r\n                \"width\": widthItems+'%'\r\n            };\r\n        }\r\n      onlineService.get({page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, keyword: $scope.keyword, filter: $scope.filter, category: $scope.categoryId}).success(function (data) {\r\n        $scope.users = data.data;\r\n        $scope.currentPage = data.current_page;\r\n        $scope.totalPages = data.last_page;//Math.ceil(data.total / data.per_page);\r\n        if (data.total == 0) {\r\n          $scope.modelOnlineNull = true;\r\n        } else {\r\n          $scope.modelOnlineNull = false;\r\n        }\r\n\r\n      });\r\n    };\r\n\r\n    $scope.customSplitStringTags = function (item) {\r\n        if (item.tags != null) {\r\n            var arr = item.tags.split(',');\r\n            return arr;\r\n        }\r\n    };\r\n\r\n    $scope.getTopModels = function () {\r\n      onlineService.getTopModels().success(function (data) {\r\n        $scope.topModels = data;\r\n      });\r\n    };\r\n\r\n    $scope.setPage = function (page) {\r\n      if (page > 0 && page <= $scope.totalPages) {\r\n        $scope.lastPage = page;\r\n        $scope.getData();\r\n      }\r\n    };\r\n\r\n    $scope.onlineInit = function (keyword, id) {\r\n      $scope.keyword = keyword;\r\n      $scope.categoryId = id || '';\r\n      $scope.getData();\r\n      $scope.getTopModels();\r\n      // Run function every second\r\n      setInterval($scope.getData, 30000);\r\n    };\r\n\r\n    $scope.setFilter = function (filter) {\r\n      $scope.filter = filter;\r\n      $scope.getData();\r\n    };\r\n    //load models in streaming page\r\n    $scope.getModelsByCategory = function (model, category) {\r\n\r\n      onlineService.getModelsByCategory(model, category).success(function (data)\r\n      {\r\n        $scope.users = data;\r\n      });\r\n    };\r\n\r\n    $scope.setFavorite = function (index, id) {\r\n      onlineService.setFavorite(id).then(function (data) {\r\n        if (data.data.success) {\r\n          $scope.users[index].favorite = (data.data.favorite === 'like') ? data.data.favorite : null;\r\n        } else {\r\n          alertify.error(data.data.message);\r\n        }\r\n      });\r\n    };\r\n\r\n    $scope.isRotate = false;\r\n\r\n    $scope.modelRotates = function (thread) {\r\n\r\n      onlineService.getModelRotateImages(thread.threadId).then(function (data) {\r\n\r\n        if (data && angular.isArray(data.data)) {\r\n          $scope.isRotate = true;\r\n\r\n          var images = data.data;\r\n\r\n          angular.forEach(images, function (item) {\r\n            setTimeout(function () {\r\n              thread.lastCaptureImage = item;\r\n            }, 150);\r\n          });\r\n        }\r\n      });\r\n\r\n    };\r\n  }\r\n]);\r\n","'use strict';\r\nangular.module('matroshkiApp').controller('mediaCtrl', ['$scope', 'appSettings', 'videoService', 'galleryService', 'mediaService', function ($scope, appSettings, videoService, galleryService, mediaService) {\r\n    $scope.currentTab = 0;\r\n    $scope.currentPage = 1;\r\n    $scope.lastPage = 1;\r\n    \r\n    $scope.setTab = function (index) {\r\n      $scope.currentTab = index;\r\n      $scope.currentPage = 1;\r\n      $scope.lastPage = 1;\r\n      $scope.getMedia(index, 1);\r\n    };\r\n\r\n//init data\r\n    $scope.init = function (model) {\r\n      $scope.modelId = model;\r\n    };\r\n    $scope.getMedia = function (index, page) {\r\n      if (index == 1) {\r\n        videoService.getModelVideos($scope.modelId, page).success(function (data) {\r\n          $scope.videos = data.data;\r\n          $scope.currentPage = data.current_page;\r\n          $scope.lastPage = data.last_page;\r\n        });\r\n      } else if (index == 2) {\r\n        galleryService.getModelGalleries($scope.modelId, page).success(function (data) {\r\n          \r\n          $scope.galleries = data.data;\r\n          $scope.currentPage = data.current_page;\r\n          $scope.lastPage = data.last_page;\r\n        });\r\n      }\r\n    };\r\n    $scope.changePage = function (status){\r\n      if(status == 0){\r\n          var page = ($scope.currentPage > 1) ? parseInt($scope.currentPage - 1) : 1;\r\n          $scope.getMedia($scope.currentTab, page);\r\n      }else{\r\n          console.log($scope.currentPage, $scope.lastPage);\r\n          var page = ($scope.currentPage < $scope.lastPage) ? parseInt($scope.currentPage + 1) : $scope.lastPage;\r\n          $scope.getMedia($scope.currentTab, page);\r\n      }\r\n    };\r\n    //check owner\r\n    $scope.checkOwner = function (item, url) {\r\n      \r\n      mediaService.checkOwner({id: item.id}).then(function (data) {\r\n        if (!data.data.success) {\r\n          return alertify.alert(data.data.message);\r\n        } else {\r\n          if (data.data.owner > 0) {\r\n\r\n            window.location.href = url + '/' + item.id;\r\n          } else {\r\n            alertify.confirm(\"Are you sure you want to buy this ( \"+item.galleryPrice+\" tokens)?\", function (e) {\r\n              if (e) {\r\n                $.ajax({\r\n                  url: appSettings.BASE_URL + 'api/v1/buy-item',\r\n                  type: 'post',\r\n                  data: {\r\n                    id: item.id,\r\n                    item: item.type\r\n                  },\r\n                  success: function (data) {\r\n                    if (!data.success) {\r\n                      alertify.alert('Warning', data.message);\r\n                    } else {\r\n                      alertify.success(data.message);\r\n                      window.location.href = data.url;\r\n                    }\r\n                  }\r\n                });\r\n              }\r\n            }).setHeader('<em> Confirm </em> ');\r\n          }\r\n        }\r\n      });\r\n    };\r\n  }]);","/* \n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n\n'use strict';\nangular.module('matroshkiApp').controller('paymentCtrl', ['$scope', '$uibModal', 'appSettings', function ($scope, $uibModal, appSettings) {\n\n//Reject transaction\n    $scope.rejectTransaction = function (id) {\n      alertify.confirm('Are you sure you want to reject this transaction? Please refund member money first.',\n              function () {\n                return window.location.href = appSettings.BASE_URL + 'admin/manager/transaction/reject/' + id;\n              }).set('title', 'Confirm');\n    }\n    //Approve transaction\n    $scope.approveTransaction = function (id) {\n      alertify.confirm('Are you sure you want to approve this transaction?',\n              function () {\n                return window.location.href = appSettings.BASE_URL + 'admin/manager/transaction/approve/' + id;\n              }).set('title', 'Confirm');\n    }\n    //transaction detail\n\n    $scope.showTransactionDetail = function (transaction, size) {\n      var modalInstance = $uibModal.open({\n        animation: true,\n        templateUrl: appSettings.BASE_URL + 'app/modals/transaction/modal.html',\n        controller: 'transactionPopupCtrl',\n        size: size,\n        backdrop: 'static',\n        keyboard: false,\n        resolve: {\n          transaction: function () {\n            return transaction;\n          }\n        }\n\n      });\n      modalInstance.result.then(function (data) {\n//        window.location.reload();\n\n      });\n//  \n    };\n  }]);","'use strict';\n\nangular.module('matroshkiApp').controller('modelPayoutRequestCtrl', ['$scope', 'payoutService', function ($scope, payoutService) {\n    $scope.startDate = {\n      open: false,\n      value: ''\n    };\n    $scope.toDate = {\n      open: false,\n      value: ''\n    };\n    $scope.typeRequest = '';\n    $scope.init = function(typeRequest, dateFrom, dateTo){\n      $scope.typeRequest = typeRequest;\n      if(dateFrom){\n        $scope.startDate.value = new Date(dateFrom);\n      }\n      if(dateTo){\n        $scope.toDate.value = new Date(dateTo);\n      }\n    };\n    $scope.$watch('startDate.value', function(data){\n      showRequestPayout($scope.startDate.value, $scope.toDate.value);\n    });\n    $scope.$watch('toDate.value', function(data){\n      showRequestPayout($scope.startDate.value, $scope.toDate.value);\n    });\n    $scope.earningByRequestedDate = null;\n    $scope.previousPayout = null;\n    $scope.pendingBalance = null;\n    function showRequestPayout(startDate, endDate) {\n      if(startDate && endDate){\n        var convertedStartDate = new Date(startDate);\n        var convertedEndDate = new Date(endDate);\n        var options = {\n          startDate: convertedStartDate.getFullYear() + \"-\" + (convertedStartDate.getMonth() + 1) + \"-\" + convertedStartDate.getDate(),\n          endDate: convertedEndDate.getFullYear() + \"-\" + (convertedEndDate.getMonth() + 1) + \"-\" + convertedEndDate.getDate()\n        };\n        payoutService.getEarningByRequestedDate(options).then(function(data) {          \n          $scope.earningByRequestedDate = data.data.amount;\n          return payoutService.getLastestRequestPayout($scope.typeRequest);\n        }).then(function(data){\n          $scope.previousPayout = data.data.amount;\n          return payoutService.getTotalPendingBalance();\n        }).then(function(data){\n          $scope.pendingBalance = (data.data.amount - $scope.earningByRequestedDate).toFixed(1);\n        }); \n      }\n    }\n  }\n])\n.controller('ModelRequestPayoutViewCrl', ['$scope', 'payoutService' ,function ($scope, payoutService) {\n    $scope.comments = [];\n\n    $scope.init = function(data) {\n      $scope.request = data;\n      $scope.status = data.status;\n      $scope.note = data.note;\n      $scope.studioId = data.studioId;\n      payoutService.getComments(data.id, !!$scope.studioId)\n        .then(function(resp) {\n          $scope.comments = resp.data;\n        });\n    };\n\n    $scope.comment = function() {\n      payoutService.addComment($scope.request.id, {\n        text: $scope.newComment,\n        studioId: $scope.studioId\n      }, !!$scope.studioId)\n      .then(function(resp) {\n        $scope.comments.push(resp.data);\n        $scope.newComment = '';\n      });\n    };\n\n    //for admin only\n    $scope.updateStatus = function() {\n      payoutService.updateStatus($scope.request.id, {\n        status: $scope.status,\n        note: $scope.note\n      }, !!$scope.studioId)\n      .then(function(resp) {\n        alertify.success('Request has been updated!');\n      });\n    };\n  }\n]);","'use strict';\nangular.module('matroshkiApp')\n.controller('modelAddProductCtrl', function ($scope, $, mediaService, appSettings) {\n  if ($('#video-poster-uploader').length > 0) {\n    var posterSettings = {\n      url: appSettings.BASE_URL + 'api/v1/upload-items?mediaType=poster&parent-id=0',\n      method: \"POST\",\n      allowedTypes: 'png,jpg,jpeg',\n      fileName: 'myFiles',\n      multiple: false,\n      showDelete: true,\n      showPreview: false,\n      showDone: true,\n      statusBarWidth: '100%',\n      dragdropWidth: '100%',\n      onSuccess: function (files, data) {\n        if (data.success) {\n          const productImage = $('.product-image .img-responsive');\n          if(productImage.prop('tagName') !== 'undefined'){\n            productImage.prop('src', '/'+data.file.path);\n          }\n          $('#image-id').val(data.file.id);\n          alertify.success(data.message);\n          $scope.uploadStatus = '';\n        } else {\n          $scope.uploadStatus = \"<font color='red'>\"+data.message+\"</font>\";\n        }\n      },\n      onError: function (files, status, errMsg) {\n        $(\"#poster-status\").html(\"<font color='red'>Upload is Failed</font>\");\n        $scope.uploadStatus = \"<font color='red'>Upload failed</font>\";\n      },\n      deleteCallback: function (element, data, pd) {\n        mediaService.deleteImage(element.file.id).then(function (data) {\n          if (data.data.success) {\n            $('#image-id').val('');\n            alertify.success(data.data.message);\n          }\n        });\n      }\n    };\n    $(\"#video-poster-uploader\").uploadFile(posterSettings);\n  }\n\n  $scope.submit = function(form) {\n    //TODO - validate me\n    $('#add-product-frm').submit();\n  };\n});","'use strict';\r\n\r\nangular.module('matroshkiApp').controller('buyProductCtrl', [\r\n  '$scope', 'productService', function ($scope, productService) {\r\n    $scope.quantity = 1;\r\n\r\n    $scope.buy = function(product) {\r\n      if (!$scope.quantity || $scope.quantity < 0) {\r\n        return alertify.error('Invalid quantity');\r\n      }\r\n\r\n      if ($scope.quantity > product.inStock) {\r\n        return alertify.error('Invalid quantity');\r\n      }\r\n\r\n      if (!window.appSettings.USER) {\r\n        return alertify.error('Please login.');\r\n      }\r\n\r\n      productService.buy(product.id, { quantity: $scope.quantity })\r\n      .then(function(data) {\r\n        if (!data.success) {\r\n          return alertify.error(data.data.message);\r\n        }\r\n\r\n        alertify.success('Buy product successfully.');\r\n      });\r\n    };\r\n  }\r\n]);","'use strict';\n\nangular.module('matroshkiApp').controller('orderTrackingCtrl', [\n  '$scope', 'orderService', function ($scope, orderService) {\n    $scope.comments = [];\n\n    $scope.init = function(data) {\n      $scope.order = data;\n      $scope.shippingStatus = data.shippingStatus;\n      $scope.updatedShippingStatus = data.shippingStatus;\n      $scope.note = data.note;\n      $scope.status = data.status || 'open';\n\n      orderService.getComments(data.id)\n        .then(function(resp) {\n          $scope.comments = resp.data;\n        });\n    };\n\n    $scope.updateStatus = function() {\n      orderService.update($scope.order.id, {\n        shippingStatus: $scope.shippingStatus,\n        note: $scope.note,\n        status: $scope.status\n      })\n      .then(function(data) {\n        $scope.updatedShippingStatus = $scope.shippingStatus;\n        return alertify.success('Update order successfully.');\n      });\n    };\n\n    $scope.comment = function() {\n      orderService.addComment($scope.order.id, {\n        text: $scope.newComment\n      })\n      .then(function(resp) {\n        $scope.comments.push(resp.data);\n        $scope.newComment = '';\n      });\n    };\n  }\n]);"]}